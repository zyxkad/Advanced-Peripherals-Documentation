{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Advanced Peripherals","text":"<p>Advanced Peripherals is a mod that adds many useful extensions for CC:Tweaked. You can communicate with Refined Storage, Applied Energistics 2 or with the whole Minecraft world.</p> <p>With Advanced Peripherals you can control your base in Minecraft only with messages in the chat, you can develop an AI that controls your farms - there really is no limit to what you can create with CC:Tweaked and Advanced Peripherals.</p>"},{"location":"#links","title":"Links","text":"<p> If you need help, join the Discord  See the mod page on Curseforge  Find the mod source code on Github </p>"},{"location":"#version-support","title":"Version support","text":"<ul> <li> 1.16: Not supported</li> <li> 1.17: Not supported</li> <li> 1.18: LTS</li> <li> 1.19.2: Fully supported</li> <li> 1.19.3: Fully supported</li> <li> 1.19.4: In discussion</li> </ul>"},{"location":"#contribute","title":"Contribute","text":"<p>If you want to contribute to this documentation or fix any spelling mistakes, feel free to do so on the documentation  Github, checkout the Contribute section in the README for more info.</p> <p>  Documentation rewrite and overhaul by  SyntheticDev </p>"},{"location":"changelogs/0.7.24r/","title":"Changelog 1.18.2-0.7.24r / 1.19.3-0.7.23b","text":""},{"location":"changelogs/0.7.24r/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Item/Fluid Filter</li> <li>Inventory manager</li> <li>ME and RS Bridge</li> </ol> <p>The 0.7.24r update brings some changes to our inventory system. All major and breaking changes are listed here to help with updating your scripts.</p>"},{"location":"changelogs/0.7.24r/#itemfluid-filter","title":"Item/Fluid Filter","text":"<p>You may know that we use tables to filter for items for some of our inventory transferring functions. This system got a rework and is now used for more functions but also got some syntax changes.</p> <p>Fluids also now use a filter system.</p> <p>The following keys got removed: - <code>json</code> - <code>tag</code></p> <p>The <code>nbt</code> key now uses json typed nbt values like <code>{nbt=\"{StoredEnchantments: [{lvl: 2s, id: \\\"minecraft:blast_protection\\\"}]}\"}</code></p> <p>The <code>name</code> key can now search for tags. <pre><code>{\n    name=\"#minecraft:wool\" -- searches for the wool tag\n    -- OR\n    name=\"#forge:ores/gold\" -- searches for the forge gold tag\n    -- OR\n    name=\"minecraft:white_wool\" -- searches for white wool\n}\n</code></pre></p> <p>You CAN NOT search for multiple items/tags at once.</p> <p>Item Filters can filter for slots with <code>toSlot</code> and <code>fromSlot</code>.</p> <p>You can find the new filter documentation here</p>"},{"location":"changelogs/0.7.24r/#inventory-manager","title":"Inventory manager","text":"<p>The following functions got deprecated:</p> <ul> <li> <p><code>removeItemFromPlayer(direction: string, count: int[, slot: int, item: string])</code></p> </li> <li> <p><code>addItemToPlayer(direction: string, count: int[, slot: int, item: string])</code></p> </li> <li> <p><code>removeItemFromPlayerNBT(direction: string, count: int[, slot: int, item: table])</code></p> </li> <li> <p><code>addItemToPlayerNBT(direction: string, count: int[, slot: int, item: table])</code></p> </li> </ul> <p>These will be replaced in the next major update with the following two functions:</p> <ul> <li> <p><code>removeItemFromPlayer(direction: direction, string: table)</code></p> </li> <li> <p><code>addItemToPlayer(direction: string, item: table)</code></p> </li> </ul> <p>The following functions now use the new filter system:</p> <ul> <li> <p><code>removeItemFromPlayerNBT(direction: string, count: int[, slot: int, item: filter])</code></p> </li> <li> <p><code>addItemToPlayerNBT(direction: string, count: int[, slot: int, item: filter]))</code></p> </li> </ul>"},{"location":"changelogs/0.7.24r/#me-and-rs-bridge","title":"ME and RS Bridge","text":"<p>Added the following functions to the me bridge:</p> <ul> <li><code>getTotalItemStorage</code></li> <li><code>getTotalFluidStorage</code></li> <li><code>getUsedItemStorage</code></li> <li><code>getUsedFluidStorage</code></li> <li><code>getAvailableItemStorage</code></li> <li><code>getAvailableFluidStorage</code></li> <li><code>listCells</code></li> <li><code>isConnected</code></li> </ul> <p>More functions now return a Method Result. This means they're capable to report errors if something wrong. For more information, refer to the documentation of the specific function. This is not a breaking change.</p>"},{"location":"changelogs/0.7r/","title":"Changelog 0.7r","text":""},{"location":"changelogs/0.7r/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Update Video</li> <li>New Features<ol> <li>Integrated Dynamics Integration</li> <li>Storage Drawer Integration</li> <li>Colony Integrator</li> <li>Geo Scanner</li> <li>Block Reader</li> <li>NBT Storage</li> <li>New Turtles Upgrades</li> <li>New Ingame Documentation</li> </ol> </li> <li>Small features and improvements<ol> <li>Breaking changes</li> <li>New functions, events and translations!</li> <li>Improved mod integration</li> <li>Support for relative and cardinal directions</li> </ol> </li> <li>Bug fixes</li> </ol>"},{"location":"changelogs/0.7r/#first-of-all","title":"First of all","text":"<p>First of all, big thanks to SirEdvin and FatalMerlin! These awesome hoomans helped a lot with this update!</p>"},{"location":"changelogs/0.7r/#video","title":"Video","text":"<p>If you don't want to read, you can watch this wonderful short video!</p>"},{"location":"changelogs/0.7r/#features","title":"Features","text":""},{"location":"changelogs/0.7r/#new-integrations","title":"New Integrations","text":""},{"location":"changelogs/0.7r/#integrated-dynamics-integration","title":"Integrated Dynamics Integration","text":"We added a peripheral to the \"Variable Store\" Block from Integrated Dynamics to read variables from integrated dynamics."},{"location":"changelogs/0.7r/#view-here","title":"View here","text":""},{"location":"changelogs/0.7r/#storage-drawer-integration","title":"Storage Drawer Integration","text":"<p>You can now access Storage Drawers. Store items, push and pull items or do whatever you want to do with items. This new feature is a mod integration.</p>"},{"location":"changelogs/0.7r/#view-here_1","title":"View here","text":""},{"location":"changelogs/0.7r/#new-peripherals","title":"New Peripherals","text":""},{"location":"changelogs/0.7r/#colony-integrator","title":"Colony Integrator","text":"We added the Colony Integrator that interacts with MineColonies. You can use this peripheral to get information about your colony. It can be used as a pocket upgrade or as a block."},{"location":"changelogs/0.7r/#view-here_2","title":"View here","text":""},{"location":"changelogs/0.7r/#geo-scanner","title":"Geo Scanner","text":"<p>The Geo Scanner provides information about blocks around it and information about the current chunk. You could use it to search the current chunk and nearby blocks for ores.</p>"},{"location":"changelogs/0.7r/#view-here_3","title":"View here","text":""},{"location":"changelogs/0.7r/#block-reader","title":"Block Reader","text":"<p>With the Block Reader you can read the data of neighboring blocks and tile entites.</p>"},{"location":"changelogs/0.7r/#view-here_4","title":"View here","text":""},{"location":"changelogs/0.7r/#nbt-storage","title":"NBT Storage","text":"<p>With the NBT Storage peripheral you are able to store tables or other values into a block as NBT data. You can read and write values to the block with the peripheral functions.</p>"},{"location":"changelogs/0.7r/#view-here_5","title":"View here","text":""},{"location":"changelogs/0.7r/#new-turtles-upgrades","title":"New Turtles Upgrades","text":"<p>New powerful turtle upgrades! With these small upgrades you finally can use any tools just from turtle inventories, perform right click on blocks, collect items in a small range, transport animals and much more! But be aware, the new abilities require fuel and most of them have a cooldown. Big thanks to SirEdvin who made these upgrades.</p>"},{"location":"changelogs/0.7r/#new-ingame-documentation","title":"New Ingame Documentation","text":"<p>Advanced Peripherals now uses Patchouli to generate ingame documentation. You can now get quick information about the mod in-game, without the need for internet access!</p>"},{"location":"changelogs/0.7r/#small-features-and-improvements","title":"Small features and improvements","text":"<p>This update also provides a lot of small features and improvements.</p>"},{"location":"changelogs/0.7r/#breaking-changes","title":"Breaking changes","text":"<ul> <li>We changed some function names of the ME Bridge and RS Bridge peripherals.</li> <li>Removed the Peripheral Proxy</li> </ul>"},{"location":"changelogs/0.7r/#new-functions-events-and-translations","title":"New functions, events and translations","text":"<ul> <li>Added the slot parameter to the functions of the Inventory Manager.</li> <li>Added <code>uuid</code> and <code>isHidden</code> return values to the chat event.</li> <li>Added a lot of new functions to the Player Detector.</li> <li>Added the <code>sendFormattedMessage</code> function to the chat box.</li> <li>Added russian translations by DrHesperus.</li> </ul>"},{"location":"changelogs/0.7r/#improved-mod-integration","title":"Improved mod integration","text":"<p>You can now connect supported blocks directly with a modem. We completely removed the Peripheral Proxy.</p>"},{"location":"changelogs/0.7r/#support-for-relative-and-cardinal-directions","title":"Support for relative and cardinal directions","text":"<p>You can now use relative directions (<code>right</code>, <code>left</code>, <code>front</code>, <code>back</code>, <code>top</code> <code>bottom</code>) and cardinal directions (<code>north</code>, <code>south</code>, <code>east</code>, <code>west</code>, <code>up</code>, <code>down</code>) at the same time. Example: <pre><code>-- Both of these will work\nredstoneIntegrator.setOutput(\"north\", true)\nredstoneIntegrator.setOutput(\"right\", true)\n</code></pre></p>"},{"location":"changelogs/0.7r/#bug-fixes","title":"Bug fixes","text":"<p>* Not all fixed bugs are listed here</p> <ul> <li>Fixed server crashes with the RS Bridge</li> <li>Fixed chunky turtle performance issues</li> <li>Fixed that the redstone integrators lets pass redstone signal through it</li> <li>Fixed that the redstone integrator does not update blocks around it</li> <li>Improved chat event performance</li> </ul>"},{"location":"guides/cooldowns_and_fuel_consumption/","title":"Turtles: Cooldowns and Fuel consumption","text":"<p>For information on the different types of cooldowns and operations that a turtle may have see the Automatas:</p> <ul> <li>Weak Automata</li> <li>Husbandry Automata</li> <li>End Automata</li> <li>Overpowered Automata</li> </ul> <p>All world changing operations will consume turtle fuel (unless it is disabled in the CC:Tweaked configuration). Most of these operations have cooldowns, so you should consider this in your code. Hopefully, every active cooldown can be retrieved via peripheral methods.</p>"},{"location":"guides/cooldowns_and_fuel_consumption/#consumption-vs-cooldowns","title":"Consumption vs Cooldowns","text":"<p>Higher fuel consumption rate will reduce operation cooldowns, but obviously will increase the consumption of fuel. For example, if a click operation required 1 fuel point to perform and has a 5 second cooldown; with a fuel consumption rate of 2 you can perform a click operation every 2.5 seconds, but at the cost of 2 fuel points.</p>"},{"location":"guides/cooldowns_and_fuel_consumption/#maximum-fuel-consumption","title":"Maximum fuel consumption","text":"<p>However, fuel consumption rate is not so simple! Every mechanic soul has a max fuel consumption limitation, that can be retrieved via the <code>getConfiguration()</code> method.</p>"},{"location":"guides/cooldowns_and_fuel_consumption/#fuel-point-usage","title":"Fuel point usage","text":"<p>Also, the number of required fuel points increases faster than fuel consumption for every reduction in cooldowns. Fuel consumption 3 requires 4 fuel points, fuel consumption 4 requires 6 fuel points, etc.</p> <p></p> <p> </p> <p> </p>"},{"location":"guides/filters/","title":"Filters","text":"<p>Added in version 1.18.2-0.7.24r and 1.19.3-0.7.23b</p> <p>The tables which are added to one of our item/fluid transferring functions are called Item/Fluid Filters. The functions use these to find the item you're looking for. These can set the item, count, slots, tags, nbt or fingerprint values.</p>"},{"location":"guides/filters/#syntax","title":"Syntax","text":""},{"location":"guides/filters/#itemfluid-name-and-tag","title":"Item/Fluid Name and Tag","text":"<p>The item's/fluid's filter name or tag can be specified with the <code>name</code> field. If this field is not set, the filter will try to search for items with the right nbt values specified in the <code>nbt</code> field or fingerprints.</p> <p>This can be a tag or a name. To filter for tags, place a <code>#</code> in front of the name.</p> <p><pre><code>{\n    name = \"minecraft:enchanted_book\" -- Will just search for an enchanted book, nbt values are ginored\n}\n</code></pre> <pre><code>{\n    name = \"#forge:ores/gold\" -- Will search for the gold ore tag, nbt values are ignored\n}\n</code></pre></p>"},{"location":"guides/filters/#amount","title":"Amount","text":"<p>The item's/fluid's filter amout can be specified with the <code>count</code> field.  Standard values are 64 or 1000 for fluids.</p> <pre><code>{\n    name = \"minecraft:cobblestone\",\n    count = 128000 -- Will try to export 128000 cobblestone to the target inventory. It will transfer less if there is not enough space in the target inventory or if there aren't enough items in the source inventory\n}\n</code></pre>"},{"location":"guides/filters/#nbt-values","title":"NBT Values","text":"<p>NBT Values are specified with the <code>nbt</code> field. The field needs to be a string which contains a json which can be parsed to a nbt tag.</p> <pre><code>{\n    name = \"minecraft:enchanted_book\" \n    nbt=\"{StoredEnchantments: [{lvl: 2s, id: \\\"minecraft:blast_protection\\\"}]}\"} -- Will search for an enchanted book with the blast protection enchantment level 2\n}\n</code></pre> <p>Any strings inside the nbt value needs to be prefixed with a \\ </p>"},{"location":"guides/filters/#slots","title":"Slots","text":"<p>Only available for item filters</p> <p>Slots can be specified with the <code>toSlot</code> or <code>fromSlot</code> field.  The inventory manager uses <code>103-100</code> for the armor slots helmet to boots and 36 for the offhand.</p> <p>Storage systems like the rs or me bridge will ignore these fields if they are used to specify the slot of the system. Like <code>toSlot</code> if you use it for <code>importItem</code></p> <p>If the slot can't be found or if the slot can't accept this item, the item will not be transferred.</p> <pre><code>{\n    toSlot = 6, -- Tries to move the item to this slot of the target inventory\n    fromSlot = 36, -- Tries to remove the item from the offhand\n}\n</code></pre>"},{"location":"guides/filters/#fingerprints","title":"Fingerprints","text":"<p>The <code>fingerprint</code> is a MD5 hash calculated of the nbt tag, the registry name and the display name.</p> <p>This can be useful if you want to only filter for one very specific item.  Also helpful if you don't want to copy the nbt tag for an item into the filter.</p> <p>A <code>fingerprint</code> can be generated with the <code>/advancedperipherals getHashItem</code> command while holding the item in your main hand.</p> <p>If the <code>fingerpring</code> field is specified, the <code>nbt</code> and <code>name</code> field will be ignored.</p> <pre><code>{\n    fingerprint = \"227FCCBE693942047DD04AA96F735F2E\" -- The hash for a protection 4 enchanted book\n    count = 5 -- Try to move 5 protection 4 books to the target inventory\n}\n</code></pre>"},{"location":"integrations/","title":"Mod Integrations","text":""},{"location":"integrations/#how-do-they-work","title":"How do they work?","text":"<p>To use our third party integrations you can simply place your computer or a modem next to a supported block and wrap it. If the block is supported, you can use the functions it'll provide, see the block's specific page for more information.</p> <p>Example with a botania mana flower: <pre><code>local flower = peripheral.find(\"manaFlower\")\n\nprint(\"Stored mana: \".. flower.getMana())\nprint(\"Mana capacity: \".. flower.getMaxMana())\nprint(\"Is on enchanted soul?: \".. flower.isOnEnchantedSoil())\n</code></pre></p>"},{"location":"integrations/#integration-requests","title":"Integration Requests","text":"<p>If you want to see more integrations, you can request a mod integration on  Github.</p>"},{"location":"integrations/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.16 Added Create and Botania integrations</p> <p>0.7.7r Removed Draconic Evolution integration</p> <p>0.7.4r Added Draconic Evolution integration</p> <p>0.7r Removed the Peripheral Proxy, you can now connect your computer with any supported block directly.  Added Integrated Dynamics integration Added Storage Drawers integration</p> <p>0.6b Added mod integrations with the Peripheral Proxy</p>"},{"location":"integrations/botania/flowers/","title":"Mana Generating Flowers","text":"<p>Available in all versions</p> <p>Picture</p> <p></p> <p>Mana generating flowers from botania can generate mana for other recipes or rituals.</p> <p>Requirement</p> <p>Requires the Botania mod to be installed</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in manaFlower Mana flowers No 0.6b <p></p>"},{"location":"integrations/botania/flowers/#functions","title":"Functions","text":""},{"location":"integrations/botania/flowers/#getmana","title":"getMana","text":"<p><pre><code>getMana() -&gt; number\n</code></pre> Returns the amount of mana stored in the flower.</p>"},{"location":"integrations/botania/flowers/#getmaxmana","title":"getMaxMana","text":"<p><pre><code>getMaxMana() -&gt; number\n</code></pre> Returns the maximum amount of mana that the flower can hold.</p>"},{"location":"integrations/botania/flowers/#isfloating","title":"isFloating","text":"<p><pre><code>isFloating() -&gt; boolean\n</code></pre> Returns true if the flower is a floating flower.</p>"},{"location":"integrations/botania/flowers/#isonenchantedsoil","title":"isOnEnchantedSoil","text":"<p><pre><code>isOnEnchantedSoil() -&gt; boolean\n</code></pre> Returns true if the flower is placed on enchanted soil.</p>"},{"location":"integrations/botania/flowers/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.16 Ported Botania integration to 1.18</p> <p>0.6b Added integration for Botania</p>"},{"location":"integrations/botania/pool/","title":"Mana Pool","text":"<p>Available in all versions</p> <p>Picture</p> <p></p> <p>Mana Pools are used to store mana. They are also used to craft items.</p> <p>Requirement</p> <p>Requires the Botania mod to be installed</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in manaPool Mana Pool block No 0.6b <p></p>"},{"location":"integrations/botania/pool/#functions","title":"Functions","text":""},{"location":"integrations/botania/pool/#getmana","title":"getMana","text":"<p><pre><code>getMana() -&gt; number\n</code></pre> Returns the amount of mana stored in the pool.</p>"},{"location":"integrations/botania/pool/#getmaxmana","title":"getMaxMana","text":"<p><pre><code>getMaxMana() -&gt; number\n</code></pre> Returns the maximum amount of mana that the pool can hold.</p>"},{"location":"integrations/botania/pool/#getmananeeded","title":"getManaNeeded","text":"<pre><code>getManaNeeded() -&gt; number\n</code></pre> <p>Added in version 0.7.4r</p> <p>Returns the amount of mana needed to fill the pool. Equivalent to <code>getMaxMana() - getMana()</code>.</p>"},{"location":"integrations/botania/pool/#isempty","title":"isEmpty","text":"<p><pre><code>isEmpty() -&gt; boolean\n</code></pre> Returns true if the Mana Pool is empty.</p>"},{"location":"integrations/botania/pool/#isfull","title":"isFull","text":"<p><pre><code>isFull() -&gt; boolean\n</code></pre> Returns true if the Mana Pool is full.</p>"},{"location":"integrations/botania/pool/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.16 Ported Botania integration to 1.18</p> <p>0.7.4r Added <code>getManaNeeded</code> to the Mana Pool integration</p> <p>0.6b Added integration for Botania</p>"},{"location":"integrations/botania/spreader/","title":"Mana Spreader","text":"<p>Available in all versions</p> <p>Picture</p> <p></p> <p>Mana Spreaders are used to transfer mana from one source to another.</p> <p>Requirement</p> <p>Requires the Botania mod to be installed</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in manaSpreader Mana Spreader block No 0.6b <p></p>"},{"location":"integrations/botania/spreader/#functions","title":"Functions","text":""},{"location":"integrations/botania/spreader/#getmana","title":"getMana","text":"<p><pre><code>getMana() -&gt; number\n</code></pre> Returns the amount of mana stored in the spreader.</p>"},{"location":"integrations/botania/spreader/#getmaxmana","title":"getMaxMana","text":"<p><pre><code>getMaxMana() -&gt; number\n</code></pre> Returns the maximum amount of mana that the spreader can hold.</p>"},{"location":"integrations/botania/spreader/#isempty","title":"isEmpty","text":"<p><pre><code>isEmpty() -&gt; boolean\n</code></pre> Returns true if the Mana Spreader is empty.</p>"},{"location":"integrations/botania/spreader/#isfull","title":"isFull","text":"<p><pre><code>isFull() -&gt; boolean\n</code></pre> Returns true if the Mana Spreader is full.</p>"},{"location":"integrations/botania/spreader/#getvariant","title":"getVariant","text":"<p><pre><code>getVariant() -&gt; string\n</code></pre> Returns the variant of the Mana Spreader.</p>"},{"location":"integrations/botania/spreader/#getbounding","title":"getBounding","text":"<p><pre><code>getBounding() -&gt; table\n</code></pre> Returns the coordinates of the Mana Spreader's target.</p>"},{"location":"integrations/botania/spreader/#properties","title":"Properties","text":"table Description x: <code>number</code> The x coordinate y: <code>number</code> The y coordinate z: <code>number</code> The z coordinate"},{"location":"integrations/botania/spreader/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.16 Ported Botania integration to 1.18</p> <p>0.6b Added integration for Botania</p>"},{"location":"integrations/create/basin/","title":"Basin","text":"<p>Available in versions 1.18+</p> <p>Picture</p> <p></p> <p>A Basin can hold items and fluids for many different crafting recipes. </p> <p>Requirement</p> <p>Requires the Create mod to be installed</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in basin Basin block No 0.7.16 <p></p>"},{"location":"integrations/create/basin/#functions","title":"Functions","text":""},{"location":"integrations/create/basin/#getinputfluids","title":"getInputFluids","text":"<p><pre><code>getInputFluids() -&gt; table\n</code></pre> Returns a list of information about all of the fluids in the input tank of the Basin.</p>"},{"location":"integrations/create/basin/#getoutputfluids","title":"getOutputFluids","text":"<p><pre><code>getOutputFluids() -&gt; table\n</code></pre> Returns a list of information about all of the fluids in the output tank of the Basin.</p>"},{"location":"integrations/create/basin/#getfilter","title":"getFilter","text":"<p><pre><code>getFilter() -&gt; table\n</code></pre> Returns the Basin's filter item.</p>"},{"location":"integrations/create/basin/#getinventory","title":"getInventory","text":"<p><pre><code>getInventory() -&gt; table\n</code></pre> Returns a list of information about all of the items in the Basin.</p>"},{"location":"integrations/create/basin/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.16 Added Create integration</p>"},{"location":"integrations/create/blazeburner/","title":"Blaze Burner","text":"<p>Available in all versions</p> <p>Picture</p> <p></p> <p>A Blaze Burner uses different fuel types to heat up things above it like basins and fluid tanks.</p> <p>Requirement</p> <p>Requires the Create mod to be installed</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in blazeBurner Blaze Burner block No 0.7.16 <p></p>"},{"location":"integrations/create/blazeburner/#functions","title":"Functions","text":""},{"location":"integrations/create/blazeburner/#getinfo","title":"getInfo","text":"<p><pre><code>getInfo() -&gt; table\n</code></pre> Returns a table with information about the Blaze Burner.</p>"},{"location":"integrations/create/blazeburner/#properties","title":"Properties","text":"info Description fuelType: <code>string</code> The type of fuel in the burner heatLevel: <code>string</code> The blaze burner heat level remainingBurnTime: <code>number</code> The amount of burn time left for the current fuel isCreative: <code>boolean</code> If the burner is using creative fuel"},{"location":"integrations/create/blazeburner/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.16 Added Create integration</p>"},{"location":"integrations/create/fluidtank/","title":"Fluid Tank","text":"<p>Available in versions 1.18+</p> <p>Picture</p> <p></p> <p>A Fluid Tank is a multiblock structure which can hold fluids. With each block being able to hold 8 buckets worth.</p> <p>Requirement</p> <p>Requires the Create mod to be installed</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in fluidTank Fluid Tank block No 0.7.16 <p></p>"},{"location":"integrations/create/fluidtank/#functions","title":"Functions","text":""},{"location":"integrations/create/fluidtank/#getinfo","title":"getInfo","text":"<p><pre><code>getInfo() -&gt; table\n</code></pre> Returns a table with information about the Blaze Burner.</p>"},{"location":"integrations/create/fluidtank/#properties","title":"Properties","text":"info Description capacity: <code>number</code> The maximum amount of fluid the tank can hold amount: <code>number</code> The amount of fluid in the tank fluid: <code>string</code> The registry name for the tank's current fluid isBoiler: <code>boolean</code> If the tank is part of a boiler"},{"location":"integrations/create/fluidtank/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.16 Added Create integration</p>"},{"location":"integrations/create/mechanicalmixer/","title":"Mechanical Mixer","text":"<p>Available in versions 1.18+</p> <p>Picture</p> <p></p> <p>A Mechanical Mixer is used in combination with a Basin to process many shapeless recipes with items and fluid.</p> <p>Requirement</p> <p>Requires the Create mod to be installed</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in mechanicalMixer Mechanical Mixer block No 0.7.16 <p></p>"},{"location":"integrations/create/mechanicalmixer/#functions","title":"Functions","text":""},{"location":"integrations/create/mechanicalmixer/#isrunning","title":"isRunning","text":"<p><pre><code>isRunning() -&gt; boolean\n</code></pre> Returns true if the mixer is currently running.</p>"},{"location":"integrations/create/mechanicalmixer/#hasbasin","title":"hasBasin","text":"<p><pre><code>hasBasin() -&gt; boolean\n</code></pre> Returns true if the mixer has a basin below it.</p>"},{"location":"integrations/create/mechanicalmixer/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.16 Added Create integration</p>"},{"location":"integrations/create/scrollbehaviour/","title":"Blocks with Scroll Value Behaviours","text":"<p>Available in all versions</p> <p>This integration works for all blocks with any type of scroll value behaviour. Like the Speed Controller and Creative Motor.</p> <p>Info</p> <p>This integration only works for Speed based scroll value behaviour blocks. So this will not work for blocks like the Smart Funnel.</p> <p>Requirement</p> <p>Requires the Create mod to be installed</p> <p> Peripheral Name Interfaces with Has events Introduced in scrollBehaviourEntityspeedController (1.16) Scroll Value Behaviour blocks No 0.7.16 <p></p>"},{"location":"integrations/create/scrollbehaviour/#functions","title":"Functions","text":""},{"location":"integrations/create/scrollbehaviour/#gettargetspeed","title":"getTargetSpeed","text":"<p><pre><code>getTargetSpeed() -&gt; number\n</code></pre> Returns the target behaviour value of the block.</p>"},{"location":"integrations/create/scrollbehaviour/#settargetspeed","title":"setTargetSpeed","text":"<p><pre><code>setTargetSpeed(value: number) -&gt; boolean\n</code></pre> Sets the target behavious value of the block to the given <code>value</code>. Returns whether or not the value was successfully set.</p>"},{"location":"integrations/create/scrollbehaviour/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.16 Added Create integration</p>"},{"location":"integrations/draconic_evolution/","title":"Draconic Evolution","text":"<p>Only available in versions =&gt;1.16-0.7.4r, &lt;1.16-0.7.7r</p> <p>The Draconic Evolution integration was only briefly available in the mod. Hence the documentation for the mod's integrations have been excluded from the side navigation. However, if needed they can still be accessed using the links below:</p>"},{"location":"integrations/draconic_evolution/#docs","title":"Docs","text":"<ul> <li>Draconic Energy Core</li> <li>Draconic Reactor</li> </ul>"},{"location":"integrations/draconic_evolution/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.7r Removed Draconic Evolution integration</p> <p>0.7.4r Added Draconic Evolution integration</p>"},{"location":"integrations/draconic_evolution/energy_core/","title":"Energy core","text":"Go Back"},{"location":"integrations/draconic_evolution/energy_core/#draconic-energy-core","title":"Draconic Energy Core","text":"<p>Only available in versions =&gt;1.16-0.7.4r, &lt;1.16-0.7.7r</p> <p>Picture</p> <p></p> <p>The Draconic Energy Core is a multiblock structure which can store massive amounts of energy.</p> <p>Requirement</p> <p>Requires the Draconic Evolution mod to be installed</p>"},{"location":"integrations/draconic_evolution/energy_core/#functions","title":"Functions","text":""},{"location":"integrations/draconic_evolution/energy_core/#getenergystored","title":"getEnergyStored","text":"<p><pre><code>getEnergyStored() -&gt; number\n</code></pre> Returns the amount of energy stored in the energy core in FE.</p>"},{"location":"integrations/draconic_evolution/energy_core/#getmaxenergystored","title":"getMaxEnergyStored","text":"<p><pre><code>getMaxEnergyStored() -&gt; number\n</code></pre> Returns the maximum amount of energy that the energy core can hold in FE.</p>"},{"location":"integrations/draconic_evolution/energy_core/#gettransferpertick","title":"getTransferPerTick","text":"<p><pre><code>getTransferPerTick() -&gt; number\n</code></pre> Returns the amount of energy being transferred in/out of the core per tick in FE.</p>"},{"location":"integrations/draconic_evolution/energy_core/#gettier","title":"getTier","text":"<p><pre><code>getTier() -&gt; number\n</code></pre> Returns the energy core's tier. A number from 1 to 8.</p>"},{"location":"integrations/draconic_evolution/energy_core/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.4r Added Draconic Evolution integration</p>"},{"location":"integrations/draconic_evolution/reactor/","title":"Reactor","text":"Go Back"},{"location":"integrations/draconic_evolution/reactor/#draconic-reactor","title":"Draconic Reactor","text":"<p>Only available in versions =&gt;1.16-0.7.4r, &lt;1.16-0.7.7r</p> <p>Picture</p> <p></p> <p>The Draconic Reactor is a powerful reactor used to create a massive amount of energy.</p> <p>Requirement</p> <p>Requires the Draconic Evolution mod to be installed</p>"},{"location":"integrations/draconic_evolution/reactor/#functions","title":"Functions","text":""},{"location":"integrations/draconic_evolution/reactor/#getreactorinfo","title":"getReactorInfo","text":"<p><pre><code>getReactorInfo() -&gt; table\n</code></pre> Returns a table with information about the reactor.</p>"},{"location":"integrations/draconic_evolution/reactor/#chargereactor","title":"chargeReactor","text":"<p><pre><code>chargeReactor() -&gt; boolean\n</code></pre> This initiates a disabled reactor and beings the reactor charging. Returns true if the reactor successfully begins charging.</p>"},{"location":"integrations/draconic_evolution/reactor/#activatereactor","title":"activateReactor","text":"<p><pre><code>activateReactor() -&gt; boolean\n</code></pre> Turns on the reactor and will being producing energy. Returns true if the reactor successfully activates.</p>"},{"location":"integrations/draconic_evolution/reactor/#stopreactor","title":"stopReactor","text":"<p><pre><code>stopReactor() -&gt; boolean\n</code></pre> Turns off the reactor. Returns true if the reactor successfully deactivates.</p>"},{"location":"integrations/draconic_evolution/reactor/#setfailsafe","title":"setFailSafe","text":"<p><pre><code>setFailSafe(enabled: boolean) -&gt; void\n</code></pre> Enables and disables the reactor's fail safe.</p>"},{"location":"integrations/draconic_evolution/reactor/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.4r Added Draconic Evolution integration</p>"},{"location":"integrations/immersive_engineering/connector/","title":"Redstone Wire Connector","text":"<p>Only available in version 1.16</p> <p>Picture</p> <p></p> <p>The Redstone Wire Connector is a block from Immersive Engineering to connect redstone wire over big distances.</p> <p>Requirement</p> <p>Requires the Immersive Engineering mod to be installed</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in redstoneConnector Redstone Wire Connector block No 0.6b <p></p>"},{"location":"integrations/immersive_engineering/connector/#functions","title":"Functions","text":""},{"location":"integrations/immersive_engineering/connector/#getredstonechannel","title":"getRedstoneChannel","text":"<p><pre><code>getRedstoneChannel() -&gt; string\n</code></pre> Returns the current redstone channel.</p>"},{"location":"integrations/immersive_engineering/connector/#setredstonechannel","title":"setRedstoneChannel","text":"<p><pre><code>setRedstoneChannel(color: string) -&gt; void\n</code></pre> Sets the current redstone <code>color</code> channel for the connector.</p>"},{"location":"integrations/immersive_engineering/connector/#getredstoneforchannel","title":"getRedstoneForChannel","text":"<p><pre><code>getRedstoneForChannel(color: string) -&gt; number\n</code></pre> Returns the redstone signal strength for the given <code>color</code> channel. A number from 0 to 15.</p>"},{"location":"integrations/immersive_engineering/connector/#getoutput","title":"getOutput","text":"<p><pre><code>getOutput() -&gt; number\n</code></pre> Returns the redstone signal stength for the current channel.</p>"},{"location":"integrations/immersive_engineering/connector/#isinputmode","title":"isInputMode","text":"<p><pre><code>isInputMode() -&gt; boolean\n</code></pre> Returns true if the Redstone Wire Connector is being used as an input.</p>"},{"location":"integrations/immersive_engineering/connector/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.6b Added integration for Immersive Engineering</p>"},{"location":"integrations/immersive_engineering/probe/","title":"Redstone Probe","text":"<p>Only available in version 1.16</p> <p>Picture</p> <p></p> <p>The Redstone Probe is a block from Immersive Engineering used to read and write data to a specific redstone channel.</p> <p>Requirement</p> <p>Requires the Immersive Engineering mod to be installed</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in redstoneProbe Redstone Probe block No 0.6b <p></p>"},{"location":"integrations/immersive_engineering/probe/#functions","title":"Functions","text":""},{"location":"integrations/immersive_engineering/probe/#getsendingchannel","title":"getSendingChannel","text":"<p><pre><code>getSendingChannel() -&gt; string\n</code></pre> Returns the current sending channel for the probe.</p>"},{"location":"integrations/immersive_engineering/probe/#setsendingchannel","title":"setSendingChannel","text":"<p><pre><code>setSendingChannel(color: string) -&gt; void\n</code></pre> Sets the sending channel for the probe to the given <code>color</code> channel.</p>"},{"location":"integrations/immersive_engineering/probe/#getreceivingchannel","title":"getReceivingChannel","text":"<p><pre><code>getReceivingChannel() -&gt; string\n</code></pre> Returns the current receiving channel for the probe.</p>"},{"location":"integrations/immersive_engineering/probe/#setreceivingchannel","title":"setReceivingChannel","text":"<p><pre><code>setReceivingChannel(color: string) -&gt; void\n</code></pre> Sets the receiving channel for the probe to the given <code>color</code> channel.</p>"},{"location":"integrations/immersive_engineering/probe/#getredstoneforchannel","title":"getRedstoneForChannel","text":"<p><pre><code>getRedstoneForChannel(color: string) -&gt; number\n</code></pre> Returns the redstone signal strength for the given <code>color</code> channel. A number from 0 to 15.</p>"},{"location":"integrations/immersive_engineering/probe/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.6b Added integration for Immersive Engineering</p>"},{"location":"integrations/integrated_dynamics/variable_store/","title":"Variable Store","text":"<p>Only available in version 1.16</p> <p>Picture</p> <p></p> <p>The Variable Store is a block from Integrated Dynamics that can store variables for future use.</p> <p>Requirement</p> <p>Requires the Integrated Dynamics mod to be installed</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in variableStore Variable Store block No 0.7r <p></p>"},{"location":"integrations/integrated_dynamics/variable_store/#functions","title":"Functions","text":""},{"location":"integrations/integrated_dynamics/variable_store/#list","title":"list","text":"<p><pre><code>list() -&gt; table\n</code></pre> Returns a list of information about all of the variables stored inside the Variable Store block.</p>"},{"location":"integrations/integrated_dynamics/variable_store/#properties","title":"Properties","text":"variable Description id: <code>string</code> The variable's id label: <code>string</code> The label name for the variable type: <code>string</code> The type of the variable dynamic: <code>boolean</code> If the variable is dynamic"},{"location":"integrations/integrated_dynamics/variable_store/#read","title":"read","text":"<p><pre><code>read(slot: number) -&gt; table | nil, string\n</code></pre> Returns a table containing information about the variable at the given <code>slot</code>. Or nil and an error message.</p>"},{"location":"integrations/integrated_dynamics/variable_store/#properties_1","title":"Properties","text":"variable Description id: <code>string</code> The variable's id label: <code>string</code> The label name for the variable type: <code>string</code> The type of the variable value: <code>string</code> The NBT representation of the stored value dynamic: <code>boolean</code> If the variable is dynamic"},{"location":"integrations/integrated_dynamics/variable_store/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7r Added integration for Integrated Dynamics</p>"},{"location":"integrations/mekanism/","title":"Mekanism","text":"<p>Only available in versions =&gt;1.16-0.6b, &lt;1.16-0.7.7r</p> <p>The Mekanism integration was removed from the mod due to mekanism adding CC:Tweaked support internally. Hence the documentation for the mod's integrations have been excluded from the side navigation. For updated documentation on mekanism integration see the Mekanism wiki. If needed the old docs can still be accessed using the links below:</p>"},{"location":"integrations/mekanism/#docs","title":"Docs","text":"<ul> <li>Boiler Valve</li> <li>Induction Valve</li> <li>Chemical Tank</li> <li>Dynamic Tank</li> <li>Fluid Tank</li> <li>Digital Miner</li> <li>Fission</li> <li>Fusion</li> <li>Solar Evaporation</li> <li>Transmitter</li> <li>Turbine</li> <li>Waste Barrel</li> <li>Energy Blocks</li> </ul>"},{"location":"integrations/mekanism/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.7r Removed Mekanism integration</p> <p>0.6b Added integration for Mekanism</p>"},{"location":"integrations/mekanism/boiler/","title":"Boiler","text":"Go Back"},{"location":"integrations/mekanism/boiler/#boiler","title":"Boiler","text":"<p>Picture</p> <p> Mod: Mekanism  Block: Boiler Valve</p> <p>The Themoelectric Boiler is a multiblock structure from mekanism to generate steam or other gases.</p> <p> </p> <p>Info</p> <p>Energy functions will always return in FE. If you want it in joules, multiply the value with 2.5</p> <p>The functions which returns a value in percent, will return a number between 1-0. (50% would be 0.5)</p>"},{"location":"integrations/mekanism/boiler/#functions","title":"Functions","text":"Function Returns Description getCoolant() table Returns the type of coolant and the amount. getCoolantCapacity() int Returns capacity of the coolant tank. getCoolantNeeded() int Returns the coolant that is needed the tank is full. getCoolantFilledPercentage() int Returns the amount of the coolant in percent. getHeatedCoolant() table Returns the type of heated coolant and the amount. getHeatedCoolantCapacity() int Returns capacity of the heated coolant tank. getHeatedCoolantNeeded() int Returns the amount of heated coolant that is needed to fill the tank. getHeatedCoolantFilledPercentage() int Returns the amount of the heated coolant in percent. getWater() int Returns the amount of the water. getWaterCapacity() int Returns the capacity of the water. getWaterNeeded() int Returns the amount of water that is needed to fill the tank. getWaterFilledPercentage() int Returns the amount of the water in percent. getSteam() int Returns the stored amount of the water. getSteamCapacity() int Returns the capacity of the steam. getSteamNeeded() int Returns the amount of steam that is needed to fill the tank. getSteamFilledPercentage() int Returns the amount of the steam in percent. getEnvironmentalLoss() int Returns the environmental loss. getTemperature() int Returns the temperature of the reactor. getBoilRate() int Returns the boil rate. getMaxBoilRate() int Returns the max boil rate. getSuperheaters() int Returns the amount of superheating elements. getBoilCapacity() int Returns the capacity of the boiler."},{"location":"integrations/mekanism/boiler/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.6b Added integration for Mekanism</p>"},{"location":"integrations/mekanism/chemical/","title":"Chemical","text":"Go Back"},{"location":"integrations/mekanism/chemical/#chemical-tank","title":"Chemical Tank","text":"<p>Picture</p> <p> Mod: Mekanism  Block: Chemical Tank</p> <p>Chemical Tanks are used to store Gases. They can be placed as a block and can interact with Pressurized Tubes. They come in the four tiers, each tier being double the capacity and output rate of its predecessor. It can store the following gases:</p> <p> </p> <p>Info</p> <p>The functions which returns a value in percent, will return a number between 1-0. (50% would be 0.5)</p>"},{"location":"integrations/mekanism/chemical/#functions","title":"Functions","text":"Function Returns Description getStored() table Returns the type and the amount of the chemical. getCapacity() int Returns the capacity. getFilledPercentage() int Returns the amount of the stored chemical in percent. getNeeded() int Returns the amount of chemicals that is needed to fill the tank."},{"location":"integrations/mekanism/chemical/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.6.6b Added integration for the chemical tank</p>"},{"location":"integrations/mekanism/digital_miner/","title":"Digital miner","text":"Go Back"},{"location":"integrations/mekanism/digital_miner/#fission-reactor","title":"Fission Reactor","text":"<p>Picture</p> <p> Mod: Mekanism  Block: Digital Miner</p> <p>The Digital Miner is the scale mining machine of Mekanism. However, this machine is like no other as it \"magically-teleports\" mined blocks to its inventory.</p> <p> </p> <p>Info</p> <p>Energy functions will always return in FE. If you want it in joules, multiply the value with 2.5</p> <p>The functions which returns a value in percent, will return a number between 1-0. (50% would be 0.5)</p>"},{"location":"integrations/mekanism/digital_miner/#functions","title":"Functions","text":"Function Returns Description getDelay() int Returns the delay between two mining operations. getRadius() int Returns the radius. setRadius(int radius) Set the radius. getMinY() int Returns the minium mining high. setMinY(int high) Set the minium mining high. getMaxY() int Returns the maximum mining high. setMaxY(int high) Set the maximum mining high. toggleSilkTouch() Toggles the silk touch mode. toggleInverse() Toggles the inverse mode. toggleAutoEject() Toggles the auto eject mode. toggleAutoPull() Toggles the auto pull mode. start() Starts the miner. stop() Stops the miner. reset() Resets the miner. getTotalEnergyFilledPercentage() int Returns the amount of the energy in percent."},{"location":"integrations/mekanism/digital_miner/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.6.5b Added the digital miner integration</p>"},{"location":"integrations/mekanism/dynamic_tank/","title":"Dynamic tank","text":"Go Back"},{"location":"integrations/mekanism/dynamic_tank/#dynamic-tank","title":"Dynamic Tank","text":"<p>Picture</p> <p> Mod: Mekanism  Block: Dynamic Tank Valve</p> <p>The Dynamic tank is a multiblock structure from mekanism to store fluids, gases and more.</p> <p> </p> <p>Info</p> <p>Energy functions will always return in FE. If you want it in joules, multiply the value with 2.5</p> <p>The functions which returns a value in percent, will return a number between 1-0. (50% would be 0.5)</p>"},{"location":"integrations/mekanism/dynamic_tank/#functions","title":"Functions","text":"Function Returns Description getStored() table Returns a table with the amount, the name of the stored type and the current type(fluid, gas, ...). getCapacity() int Returns the capacity of the tank. getFilledPercentage int Returns the amount in percent. getNeeded() int Returns the amount that is needed to fill the tank. isEmpty() boolean Returns true if the tank is empty."},{"location":"integrations/mekanism/dynamic_tank/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.3r Added dynamic tank integration</p> <p>0.6b Added integration for Mekanism</p>"},{"location":"integrations/mekanism/fission/","title":"Fission","text":"Go Back"},{"location":"integrations/mekanism/fission/#fission-reactor","title":"Fission Reactor","text":"<p>Picture</p> <p> Mod: Mekanism  Block: Fission Reactor Logic Adapter</p> <p>The Fission Reactor is a reactor from Mekanism.</p> <p> </p> <p>Info</p> <p>Energy functions will always return in FE. If you want it in joules, multiply the value with 2.5</p> <p>The functions which returns a value in percent, will return a number between 1-0. (50% would be 0.5)</p>"},{"location":"integrations/mekanism/fission/#functions","title":"Functions","text":"Function Returns Description getCoolant() table Returns the type of coolant and the amount. getCoolantCapacity() int Returns capacity of the coolant tank. getCoolantNeeded() int Returns the coolant that is needed the tank is full. getCoolantFilledPercentage() int Returns the amount of the coolant in percent. getHeatedCoolant() table Returns the type of heated coolant and the amount. getHeatedCoolantCapacity() int Returns capacity of the heated coolant tank. getHeatedCoolantNeeded() int Returns the amount of heated coolant that is needed to fill the tank. getHeatedCoolantFilledPercentage() int Returns the amount of the heated coolant in percent. getFuel() int Returns the amount of fuel. getFuelCapacity() int Returns capacity of the fuel tank. getFuelNeeded() int Returns the amount of fuel that is needed to fill the tank. getFuelFilledPercentage() int Returns the amount of the fuel in percent. getWaste() int Returns the amount of waste. getWasteCapacity() int Returns capacity of the waste tank. getWasteNeeded() int Returns the waste that is needed to fill the tank. getWasteFilledPercentage() int Returns the amount of the waste in percent. getStatus() booleans Returns true if the reactor is active false if not. scram() Deactivates the reactor. activate() Activates the reactor. getBurnRate() int Returns the burn rate of the reactor that is set. setBurnRate(int rate) Set the burn rate. getActualBurnRate() int Actual burn rate as it may be lower if say there is not enough fuel           . getMaxBurnRate() int Returns the max burn rate. getDamagePercent() int Returns the damage in percent. getHeatingRate() int Returns the heating rate. getEnvironmentalLoss() int Returns the environmental loss. getTemperature() int Returns the temperature of the reactor. getHeatCapacity() int Returns the max temperature. getFuelAssemblies() int Returns the amount of fuel assemblies. getFuelSurfaceArea() int Returns the surface area of the fuel. getBoilEfficiency() int getActualBurnRate() int Actual burn rate as it may be lower if say there is not enough fuel           . getMaxBurnRate() int Returns the max burn rate. getDamagePercent() int Returns the damage in percent. getHeatingRate() int Returns the heating rate. getEnvironmentalLoss() int Returns the environmental loss."},{"location":"integrations/mekanism/fission/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.6b Added integration for Mekanism</p>"},{"location":"integrations/mekanism/fluid_tank/","title":"Fluid tank","text":"Go Back"},{"location":"integrations/mekanism/fluid_tank/#fluid-tank","title":"Fluid Tank","text":"<p>Picture</p> <p> Mod: Mekanism  Block: Fluid Tanks</p> <p>Fluid Tanks are tanks from mekanism to store fluids, obviously.</p> <p> </p> <p>Info</p> <p>Energy functions will always return in FE. If you want it in joules, multiply the value with 2.5</p> <p>The functions which returns a value in percent, will return a number between 1-0. (50% would be 0.5)</p>"},{"location":"integrations/mekanism/fluid_tank/#functions","title":"Functions","text":"Function Returns Description getStored() table Returns a table with the amount and the name of the stored type. getTier() string Returns the tier of the tank(Basic, Advanced, ...). getCapacity() int Returns the capacity of the tank. getFilledPercentage int Returns the amount in percent. getNeeded() int Returns the amount that is needed to fill the tank."},{"location":"integrations/mekanism/fluid_tank/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.2r Added fluid tank integration</p> <p>0.6b Added integration for Mekanism</p>"},{"location":"integrations/mekanism/fusion/","title":"Fusion","text":"Go Back"},{"location":"integrations/mekanism/fusion/#fusion-reactor","title":"Fusion Reactor","text":"<p>Picture</p> <p> Mod: Mekanism  Block: Fusion Reactor Logic Adapter</p> <p>The Fusion Reactor is a reactor from Mekanism.</p> <p> </p> <p>Info</p> <p>Energy functions will always return in FE. If you want it in joules, multiply the value with 2.5</p> <p>The functions which returns a value in percent, will return a number between 1-0. (50% would be 0.5)</p>"},{"location":"integrations/mekanism/fusion/#functions","title":"Functions","text":"Function Returns Description getHohlraum() table Returns the item stack of the hohlraum. getPlasmaTemperature() int Returns the temperature of the plasma. getCaseTemperature() int Returns the temperature of the case. getWater() int Returns the amount of the water. getWaterCapacity() int Returns the capacity of the water. getWaterNeeded() int Returns the amount of water that is needed to fill the tank. getWaterFilledPercentage() int Returns the amount of the water in percent. getSteam() int Returns the stored amount of the water. getSteamCapacity() int Returns the capacity of the steam. getSteamNeeded() int Returns the amount of steam that is needed to fill the tank. getSteamFilledPercentage() int Returns the amount of the steam in percent. getTritium() int Returns the amount of the tritium. getTritiumCapacity() int Returns the capacity of the tritium. getTritiumNeeded() int Returns the amount of tritium that is needed to fill the tank. getTritiumFilledPercentage() int Returns the amount of the tritium in percent. getDeuterium() int Returns the stored amount of the deuterium. getDeuteriumCapacity() int Returns the capacity of the deuterium. getDeuteriumNeeded() int Returns the amount of deuterium that is needed to fill the tank. getDeuteriumFilledPercentage() int Returns the amount of the deuterium in percent. getDTFuel() int Returns the stored amount of the dt-fuel. getDTFuelCapacity() int Returns the capacity of the dt-fuel. getDTFuelNeeded() int Returns the amount of dt-fuel that is needed to fill the tank. getDTFuelFilledPercentage() int Returns the amount of the dt-fuel in percent. getProduction() int Returns the energy production. getInjectionRate() int Returns the injection rate. setInjectionRate(int rate) Set the injection rate. getPassiveGeneration(boolean isWaterCooled) int Returns the passive generation."},{"location":"integrations/mekanism/fusion/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.6b Added integration for Mekanism</p>"},{"location":"integrations/mekanism/generic/","title":"Generic","text":"Go Back"},{"location":"integrations/mekanism/generic/#generic-mekanism-machine","title":"Generic Mekanism Machine","text":"<p>Picture</p> <p> Mod: Mekanism  Block: Any energy supporting block</p> <p>This proxy integration will add a integration for every energy supporting machine from Mekanism.</p> <p> </p> <p>Info</p> <p>Energy functions will always return in FE. If you want it in joules, multiply the value with 2.5</p> <p>The functions which returns a value in percent, will return a number between 1-0. (50% would be 0.5)</p>"},{"location":"integrations/mekanism/generic/#functions","title":"Functions","text":"Function Returns Description getTotalEnergy() int Returns the amount of stored energy. getTotalEnergyNeeded() int Returns the amount of energy that is needed to fill the block. getTotalEnergyFilledPercentage() int Returns the amount of the energy in percent. getTotalMaxEnergy() int Returns the capacity of the machine."},{"location":"integrations/mekanism/generic/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.6b Added integration for Mekanism</p>"},{"location":"integrations/mekanism/induction/","title":"Induction","text":"Go Back"},{"location":"integrations/mekanism/induction/#induction-matrix","title":"Induction Matrix","text":"<p>Picture</p> <p> Mod: Mekanism  Block: Induction Valve</p> <p>The Induction Matrix is a multiblock structure from mekanism made to store large amounts of energy.</p> <p> </p> <p>Info</p> <p>Energy functions will always return in FE. If you want it in joules, multiply the value with 2.5</p> <p>The functions which returns a value in percent, will return a number between 1-0. (50% would be 0.5)</p>"},{"location":"integrations/mekanism/induction/#functions","title":"Functions","text":"Function Returns Description getEnergy() int Returns the amount of stored energy. getLastInput() int Returns the input rate per tick. getLastOutput() int Returns the output rate per tick. getEnergyNeeded() int Returns the amount of energy that is needed to fill the matrix. getEnergyFilledPercentage() int Returns the amount of the energy in percent. getTransferCap() table Returns the max transfer rate per tick. This is defined by the amount of induction providers getInstalledCells() int Returns the amount of the installed induction cells. getInstalledProviders() int Returns the amount of the installed induction providers. getMaxEnergy() int Returns the capacity of the induction matrix."},{"location":"integrations/mekanism/induction/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.6b Added integration for Mekanism</p>"},{"location":"integrations/mekanism/solar_evaporation/","title":"Solar evaporation","text":"Go Back"},{"location":"integrations/mekanism/solar_evaporation/#solar-evaporation-plant","title":"Solar Evaporation Plant","text":"<p>Picture</p> <p> Mod: Mekanism  Block: Thermal Evaporation Valve</p> <p>A Solar Evaporation Plant is a multiblock structure from mekanism to create brine or lithium.</p> <p> </p> <p>Info</p> <p>Energy functions will always return in FE. If you want it in joules, multiply the value with 2.5</p> <p>The functions which returns a value in percent, will return a number between 1-0. (50% would be 0.5)</p>"},{"location":"integrations/mekanism/solar_evaporation/#functions","title":"Functions","text":"Function Returns Description getInputTank() table Returns the name and the amount of the stored fluid of the input tank(left). getInputTank() table Returns the name and the amount of the stored fluid of the output tank(right). getHeat() int Returns the amount heat. getHeight() int Returns the height of the tower. getProduction() int Returns the production rate of the tower."},{"location":"integrations/mekanism/solar_evaporation/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.1r Added evaporation tower integration</p> <p>0.6b Added integration for Mekanism</p>"},{"location":"integrations/mekanism/transmitter/","title":"Transmitter","text":"Go Back"},{"location":"integrations/mekanism/transmitter/#transmitters","title":"Transmitters","text":"<p>Picture</p> <p> Mod: Mekanism  Block: Any transmitter. See full list below</p> <p>Transmitters from mekanism are blocks which can transport various types of things like gases, fluids, energy or more.</p> <p> </p> <p>Info</p> <p>Energy functions will always return in FE. If you want it in joules, multiply the value with 2.5</p> <p>The functions which returns a value in percent, will return a number between 1-0. (50% would be 0.5)</p>"},{"location":"integrations/mekanism/transmitter/#supported-transmitters","title":"Supported transmitters","text":"<p>Supporte transmitters are</p> <ul> <li>Universal Cable</li> <li>Thermodynamic Conductor</li> <li>Pressurized Tube</li> <li>Mechanical Pipe</li> <li>Logistical Transporter</li> </ul>"},{"location":"integrations/mekanism/transmitter/#functions","title":"Functions","text":"<p>Functions for every transmitter</p> Function Returns Description getTransmitters int Returns the amount of transmitters. (Amount of cables) getAcceptors int Returns the amount of acceptors. (Amount of cables which are connected) getThroughput int Returns how much the cable can transfer at ones.(Use <code>getPull()</code> for the logistical transporter) getTier string Returns the tier of the transporter. (Basic to ultimate) getCapacity int Returns the capacity of the cable. (Not available for: logistical transporter) getStored int Returns the amount of stored things in the cable. (Not available for: logistical transporter) getNetworkCapacity int Returns the capacity of the network. (Not available for: logistical transporter, thermodynamic conductor) getNetworkStored int Returns the amount of stored things in the network. (Not available for: logistical transporter, thermodynamic conductor)"},{"location":"integrations/mekanism/transmitter/#logistical-transporter","title":"Logistical Transporter","text":"Function Returns Description getBaseSpeed int Returns the base speed(blocks per second) of the transmitter. getBasePull int Returns the base pull speed(items per second) of the transmitter. getSpeed int Returns the base speed (blocks per second) of the transmitter based on the configuration. getPull int Returns the base pull speed(items per second) of the transmitter based on the configuration."},{"location":"integrations/mekanism/transmitter/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.6r Added transmitter integration</p> <p>0.6b Added integration for Mekanism</p>"},{"location":"integrations/mekanism/turbine/","title":"Turbine","text":"Go Back"},{"location":"integrations/mekanism/turbine/#industrial-turbine","title":"Industrial Turbine","text":"<p>Picture</p> <p> Mod: Mekanism  Block: Turbine Valve</p> <p>The Industrial Turbine is a multiblock structure from mekanism to generate energy with steam.</p> <p> </p> <p>Info</p> <p>Energy functions will always return in FE. If you want it in joules, multiply the value with 2.5</p> <p>The functions which returns a value in percent, will return a number between 1-0. (50% would be 0.5)</p>"},{"location":"integrations/mekanism/turbine/#functions","title":"Functions","text":"Function Returns Description getSteam() int Returns the stored amount of the water. getSteamCapacity() int Returns the capacity of the steam. getSteamNeeded() int Returns the amount of steam that is needed to fill the tank. getSteamFilledPercentage() int Returns the amount of the steam in percent. getLastSteamInputRate() int Returns the amount of steam that is imported to the turbine. getDumpingMode() string Returns the gas dumping mode. getProductionRate() int Returns the energy production per tick. getMaxProduction() int Returns the max possible energy production per tic. getFlowRate() int Returns the current flow rate per tick. getMaxFlowRate() int Returns the current max possible flow rate per tick. getMaxWaterOutput() int Returns the max possible water output. getDispersers() int Returns the amount of dispersers. getVents() int Returns the amount of vents. getBlades() int Returns the amount of blades. getCoils() int Returns the amount of coils. getCondensers() int Returns the amount of condensers."},{"location":"integrations/mekanism/turbine/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.6b Added integration for Mekanism</p>"},{"location":"integrations/mekanism/waste_barrel/","title":"Waste barrel","text":"Go Back"},{"location":"integrations/mekanism/waste_barrel/#waste-barrel","title":"Waste Barrel","text":"<p>Picture</p> <p> Mod: Mekanism  Block: Waste Barrel</p> <p>Waste Barrels are blocks from mekanism to store nuclear waste.</p> <p> </p> <p>Info</p> <p>Energy functions will always return in FE. If you want it in joules, multiply the value with 2.5</p> <p>The functions which returns a value in percent, will return a number between 1-0. (50% would be 0.5)</p>"},{"location":"integrations/mekanism/waste_barrel/#functions","title":"Functions","text":"Function Returns Description getStored() int Returns the amount of stored waste. getCapacity() string Returns the capacity of the barrel. getFilledPercentage int Returns the amount of waste in percent."},{"location":"integrations/mekanism/waste_barrel/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.2r Added waste barrel integration</p> <p>0.6b Added integration for Mekanism</p>"},{"location":"integrations/minecraft/beacon/","title":"Beacon","text":"<p>Picture</p> <p></p> <p>A Beacon is a block that projects a light beam skyward and can provide status effects such as Speed, Jump Boost, Haste, Regeneration, Resistance, or Strength to nearby players.</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in beacon Beacon block No 0.6b <p></p>"},{"location":"integrations/minecraft/beacon/#functions","title":"Functions","text":""},{"location":"integrations/minecraft/beacon/#getlevel","title":"getLevel","text":"<p><pre><code>getLevel() -&gt; number\n</code></pre> Returns the level of the Beacon.</p>"},{"location":"integrations/minecraft/beacon/#getprimaryeffect","title":"getPrimaryEffect","text":"<p><pre><code>getPrimaryEffect() -&gt; string\n</code></pre> Returns the registry name of the beacon's primary effect.</p>"},{"location":"integrations/minecraft/beacon/#getsecondaryeffect","title":"getSecondaryEffect","text":"<p><pre><code>getSecondaryEffect() -&gt; string\n</code></pre> Returns the registry name of the beacon's secondary effect.</p>"},{"location":"integrations/minecraft/beacon/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.6b Added integration for Minecraft</p>"},{"location":"integrations/minecraft/noteblock/","title":"Note Block","text":"<p>Picture</p> <p></p> <p>A Note Block is a musical block that emits sounds when punched or powered with redstone.</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in noteBlock Note Block No 0.7.4r <p></p>"},{"location":"integrations/minecraft/noteblock/#functions","title":"Functions","text":""},{"location":"integrations/minecraft/noteblock/#playnote","title":"playNote","text":"<p><pre><code>playNote() -&gt; void\n</code></pre> Plays the Note Block's current note sound.</p>"},{"location":"integrations/minecraft/noteblock/#getnote","title":"getNote","text":"<p><pre><code>getNote() -&gt; number\n</code></pre> Returns the index for the Note Block's current note. A number from 0 to 24.</p>"},{"location":"integrations/minecraft/noteblock/#changenoteby","title":"changeNoteBy","text":"<p><pre><code>changeNoteBy(note: number) -&gt; number\n</code></pre> Changes the Note Block's note to the given <code>note</code>. <code>note</code> must be a number from 0 to 24. Returns the <code>note</code> if successful or -1 if not successful.</p>"},{"location":"integrations/minecraft/noteblock/#changenote","title":"changeNote","text":"<p><pre><code>changeNote() -&gt; number\n</code></pre> Increments the Note Block's note to the next available note. Returns the new note if successful or -1 if not successful.</p>"},{"location":"integrations/minecraft/noteblock/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.4r Added the Note Block integration</p> <p>0.6b Added integration for Minecraft</p>"},{"location":"integrations/storage_drawers/drawer/","title":"Drawer","text":"<p>Only available in version 1.16</p> <p>Picture</p> <p></p> <p>Drawers are a storage block from the Storage Drawer mod. This integration fixes weird interactions between the generic CC:Tweaked inventory integration and Storage Drawer logic.</p> <p>Requirement</p> <p>Requires the Storage Drawers mod to be installed</p> <p></p>"},{"location":"integrations/storage_drawers/drawer/#functions","title":"Functions","text":"<p>See the generic inventory peripheral from CC:Tweaked for details.</p>"},{"location":"integrations/storage_drawers/drawer/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7r Added integration for Storage Drawers</p>"},{"location":"items/ar_goggles/","title":"AR Goggles","text":"<p>Picture</p> <p></p> <p>The AR Goggles can be used in combination with the AR Controller to have a customizable overlay wherever you go. Fun! See the documenation for the AR Controller to learn more.</p> <p>Hint</p> <p>To link your goggles to an AR Controller, right click it with them in your hand. Multiple Goggles can be linked to one Controller.</p> <p>Bug</p> <p>The AR Goggles are currently slightly buggy. Sometimes, they just don't do what they should do. We will rework the AR System in 0.8r/1.0r</p>"},{"location":"items/ar_goggles/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.5b Added the AR Controller and AR Goggles, made by Olfi01#6413</p>"},{"location":"items/chunk_controller/","title":"Chunk Controller","text":"<p>Picture</p> <p></p> <p>The Chunk Controller is a crafting ingredient for the Chunky Turtle.</p> <p></p>"},{"location":"items/chunk_controller/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.4b Added as the crafting ingredient for the chunky turtle.</p>"},{"location":"items/computer_tool/","title":"Computer Tool","text":"<p>Picture</p> <p></p> <p>The Computer Tool is a tool to open GUI's from the mod blocks.</p> <p>Note</p> <p>Currently the Computer Tool is useless.</p> <p></p>"},{"location":"items/computer_tool/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.5b Added the Computer Tool</p>"},{"location":"items/memory_card/","title":"Memory Card","text":"<p>Picture</p> <p></p> <p>The Memory Card can be used in combination with the Inventory Manager to manipulate with the player's inventory. See the Inventory Manager documenation for more info.</p> <p>Hint</p> <p>Right click with the Memory Card in your hand to assign it to yourself to the card.</p> <p></p>"},{"location":"items/memory_card/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.5b Added the Inventory Manager and Memory Card</p>"},{"location":"items/pocket_computer/","title":"Pocket Computers","text":"<p>Picture</p> <p></p> <p>There are Pocket Computer versions of the following peripherals:</p> <ul> <li>Environment Detector \u279c Environment ..</li> <li>Player Detector \u279c Player ..</li> <li>Chat Box \u279c Chatty ..</li> <li>Geo Scanner \u279c Geoscanning ..</li> <li>Colony Integrator \u279c Colony ..</li> </ul> <p>Events</p> <p>The pocket computer versions of the peripherals do not receive the peripheral events.</p>"},{"location":"items/pocket_computer/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7r Added Geo Scanner pocket computer.</p> <p>0.4.3b Added the Player Detector and Chat Box pocket computers.</p> <p>0.4.1b Added the Environment Detector pocket computer.</p>"},{"location":"peripherals/ar_controller/","title":"AR Controller","text":"<p>Picture</p> <p></p> <p>The AR Controller is used to control your AR Goggles wirelessly. You can draw anything you wish into an overlay that will be visible as long as you're wearing the goggles.</p> <p>Hint</p> <p>To link your goggles to an AR Controller, right click it with them in your hand. Multiple Goggles can be linked to one Controller.</p> <p>Bug</p> <p>The AR Goggles are currently slightly buggy. Sometimes, they just don't do what they should do. We will rework the AR System in 0.8r/1.0r</p> <p> Peripheral Name Interfaces with Has events Introduced in arController AR Goggles No 0.5b <p></p> <p>While the Controller is in relative mode, it interprets all coordinates as if they were on a virtual screen of the size you specified, and then scales them according to your screen size.</p> <p>All color values are hexadecimal color codes (for example <code>0xff00ff</code>)</p> <p>Everything that is painted onto the canvas remains there until <code>clear()</code> or if the element is removed using <code>clearElement(id)</code>, however, it might be repositioned if relative mode is toggled on or off.</p>"},{"location":"peripherals/ar_controller/#functions","title":"Functions","text":""},{"location":"peripherals/ar_controller/#clear","title":"clear","text":"<pre><code>clear() -&gt; void\n</code></pre> <p>Clears the entire canvas.</p>"},{"location":"peripherals/ar_controller/#clearelement","title":"clearElement","text":"<pre><code>clearElement(id: string) -&gt; void\n</code></pre> <p>Clears the element with the given <code>id</code>.</p>"},{"location":"peripherals/ar_controller/#horizontalline","title":"horizontalLine","text":"<pre><code>horizontalLine(minX: number, maxX: number, y: number, color: number) -&gt; void\n</code></pre> <p>Draws a horizontal line in the given color from minX to maxX at vertical y.</p>"},{"location":"peripherals/ar_controller/#horizontallinewithid","title":"horizontalLineWithId","text":"<pre><code>horizontalLineWithId(id: string, minX: number, maxX: number, y: number, color: number) -&gt; void\n</code></pre> <p>The same as <code>horizontalLine()</code>, but has an id so it can be overridden later on or can be completely cleared.</p>"},{"location":"peripherals/ar_controller/#verticalline","title":"verticalLine","text":"<pre><code>verticalLine(x: number, minY: number, maxY: number, color: number) -&gt; void\n</code></pre> <p>Draws a vertical line in the given color from minY to maxY at horizontal x.</p>"},{"location":"peripherals/ar_controller/#verticallinewithid","title":"verticalLineWithId","text":"<pre><code>verticalLineWithId(id: string, x: number, minY: number, maxY: number, color: number) -&gt; void\n</code></pre> <p>The same as <code>verticalLine()</code>, but has an id so it can be overridden later on or can be completely cleared.</p>"},{"location":"peripherals/ar_controller/#drawstring","title":"drawString","text":"<pre><code>drawString(text: string, x: number, y: number, color: number) -&gt; void\n</code></pre> <p>Draws the given string to the specified position with the specified text color.</p>"},{"location":"peripherals/ar_controller/#drawstringwithid","title":"drawStringWithId","text":"<pre><code>drawStringWithId(id: string, text: string, x: number, y: number, color: number) -&gt; void\n</code></pre> <p>The same as <code>drawString()</code>, but has an id so it can be overridden later on or can be completely cleared.</p>"},{"location":"peripherals/ar_controller/#drawcenteredstring","title":"drawCenteredString","text":"<pre><code>drawCenteredString(text: string, x: number, y: number, color: number) -&gt; void\n</code></pre> <p>The same as <code>drawString()</code>, but centers the string horizontally around the specified position.</p>"},{"location":"peripherals/ar_controller/#drawcenteredstringwithid","title":"drawCenteredStringWithId","text":"<pre><code>drawCenteredStringWithId(id: string, text: string, x: number, y: number, color: number) -&gt; void\n</code></pre> <p>The same as <code>drawCenteredString()</code>, but has an id so it can be overridden later on or can be completely cleared.</p>"},{"location":"peripherals/ar_controller/#drawrightboundstring","title":"drawRightboundString","text":"<pre><code>drawRightboundString(text: string, x: number, y: number, color: number) -&gt; void\n</code></pre> <p>The same as <code>drawString()</code>, but the string is positioned with its right end at the specified position.</p>"},{"location":"peripherals/ar_controller/#drawrightboundstringwithid","title":"drawRightboundStringWithId","text":"<pre><code>drawRightboundStringWithId(id: string, text: string, x: number, y: number, color: number) -&gt; void\n</code></pre> <p>The same as <code>drawRightboundString()</code>, but has an id so it can be overridden later on or can be completely cleared.</p>"},{"location":"peripherals/ar_controller/#drawitemicon","title":"drawItemIcon","text":"<pre><code>drawItemIcon(itemId: string, x: number, y: number) -&gt; void\n</code></pre> <p>Added in version 0.5.2b</p> <p>Draws the given item to the specified position.</p>"},{"location":"peripherals/ar_controller/#drawitemiconwithid","title":"drawItemIconWithId","text":"<pre><code>drawItemIconWithId(id: string, itemId: string, x: number, y: number) -&gt; void\n</code></pre> <p>Added in version 0.5.2b</p> <p>The same as <code>drawItemIcon()</code>, but has an id so it can be overridden later on or can be completely cleared.</p>"},{"location":"peripherals/ar_controller/#drawcircle","title":"drawCircle","text":"<pre><code>drawCircle(x: number, y: number, radius: number, color: number) -&gt; void\n</code></pre> <p>Added in version 0.5.2b</p> <p>Draws a circle without filling it.</p>"},{"location":"peripherals/ar_controller/#drawcirclewithid","title":"drawCircleWithId","text":"<pre><code>drawCircleWithId(id: string, x: number, y: number, radius: number, color: number) -&gt; void\n</code></pre> <p>Added in version 0.5.2b</p> <p>The same as <code>drawCircle()</code>, but has an id so it can be overridden later on or can be completely cleared.</p>"},{"location":"peripherals/ar_controller/#fill","title":"fill","text":"<pre><code>fill(minX: number, minY: number, maxX: number, maxY: number, color: number)\n</code></pre> <p>Fills a rectangle with the given color from the corner minX, minY to maxX, maxY.</p>"},{"location":"peripherals/ar_controller/#fillwithid","title":"fillWithId","text":"<pre><code>fill(id: string, minX: number, minY: number, maxX: number, maxY: number, color: number)\n</code></pre> <p>The same as <code>fill()</code>, but has an id so it can be overridden later on or can be completely cleared.</p>"},{"location":"peripherals/ar_controller/#fillcircle","title":"fillCircle","text":"<pre><code>fillCircle(x: number, y: number, radius: number, color: number) -&gt; void\n</code></pre> <p>Added in version 0.5.2b</p> <p>Draws a full circle.</p>"},{"location":"peripherals/ar_controller/#fillcirclewithid","title":"fillCircleWithId","text":"<pre><code>fillCircleWithId(id: string, x: number, y: number, radius: number, color: number) -&gt; void\n</code></pre> <p>Added in version 0.5.2b</p> <p>The same as <code>fillCircle()</code>, but has an id so it can be overridden later on or can be completely cleared.</p>"},{"location":"peripherals/ar_controller/#fillgradient","title":"fillGradient","text":"<pre><code>fillGradient(minX: number, minY: number, maxX: number, maxY: number, colorFrom: number, colorTo: number) -&gt; void\n</code></pre> <p>Draws a rectangular gradient from colorFrom to colorTo with the given corners.</p>"},{"location":"peripherals/ar_controller/#fillgradientwithid","title":"fillGradientWithId","text":"<pre><code>fillGradientWithId(id: string, minX: number, minY: number, maxX: number, maxY: number, colorFrom: number, colorTo: number) -&gt; void\n</code></pre> <p>The same as <code>fillGradient()</code>, but has an id so it can be overridden later on or can be completely cleared.</p>"},{"location":"peripherals/ar_controller/#isrelativemode","title":"isRelativeMode","text":"<pre><code>isRelativeMode(): true, number, number | false\n</code></pre> <p>Returns true and the size of the virtual screen if relative mode is active, or just false if it isn't.</p>"},{"location":"peripherals/ar_controller/#setrelativemode","title":"setRelativeMode","text":"<pre><code>setRelativeMode(enabled: boolean, virtualScreenWidth?: number, virtualScreenHeight?: number) -&gt; void\n</code></pre> <p>Activates or deactivates relative mode. Requires virtual screen width and height if it is being enabled.</p> <p>Hint</p> <p>Use negative coordinates to specify an x value from the right end of the screen or a y value from the bottom!</p>"},{"location":"peripherals/ar_controller/#examples","title":"Examples","text":""},{"location":"peripherals/ar_controller/#example-1","title":"Example 1","text":"<p>Olfi01 made a simple script that shows the current date and time in the top right corner of the screen and updates every second.</p> <pre><code>local controller = peripheral.find(\"arController\") -- Finds the peripheral if one is connected\n\nif controller == nil then error(\"arController not found\") end\n\ncontroller.setRelativeMode(true, 1600, 900) -- Convenient Aspect ratio for most screens\nwhile true do\n  local timer = os.startTimer(1)\n  local event, id\n  repeat\n    event, id = os.pullEvent(\"timer\")\n  until id == timer\n  controller.clear() -- If you don't do this, the texts will draw over each other\n  controller.drawRightboundString(os.date(), -10, 10, 0xffffff)\nend\n</code></pre>"},{"location":"peripherals/ar_controller/#example-2","title":"Example 2","text":"<p>Olfi01 made another script to draw .nfp files, which you can draw with the paint program, in cc in your HUD.</p> <p>First, we have a script with more adaptability. You can define x, y, width and height.</p> <p>Script 1: Github</p> <p>And we have another script which depends on the script above, but is simpler to use.</p> <p>Script 2: Github</p>"},{"location":"peripherals/ar_controller/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.5.2b Added <code>fillCircle</code>, <code>drawCircle</code> and <code>drawItemIcon</code>.</p> <p>0.5b Added the AR Controller and Goggles, made by Olfi01#6413</p>"},{"location":"peripherals/block_reader/","title":"Block Reader","text":"<p>Picture</p> <p></p> <p>This block is able to read data about any blocks or tile entities in front of it.</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in blockReader Blocks No 0.7r <p></p>"},{"location":"peripherals/block_reader/#functions","title":"Functions","text":""},{"location":"peripherals/block_reader/#getblockname","title":"getBlockName","text":"<pre><code>getBlockName() -&gt; string\n</code></pre> <p>Returns the registry name of the block (ex. <code>minecraft:dirt</code>)</p> <pre><code>local reader = peripheral.find(\"blockReader\")\n\nprint(\"There is a \" .. read.getBlockName() .. \" in front.\")\n</code></pre>"},{"location":"peripherals/block_reader/#getblockdata","title":"getBlockData","text":"<pre><code>getBlockData() -&gt; table | nil\n</code></pre> <p>Returns the block data of the block if block is a tile entity.</p> <pre><code>local reader = peripheral.find(\"blockReader\")\n\n--Prints the contents of the data\nfor k, v in ipairs(reader.getBlockData()) do \n    print(k, v)\nend\n</code></pre>"},{"location":"peripherals/block_reader/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7r Added the Block Reader peripheral.</p>"},{"location":"peripherals/chat_box/","title":"Chat Box","text":"<p>Picture</p> <p></p> <p>The Chat Box is able to read and write messages to the in-game chat. You can send messages to just one player or to everyone.</p> <p>Hint</p> <p>If you prefix your message with a $ the message will not be sent to the global chat but it will still fire the chat event. Example: <code>$this message is hidden!</code></p> <p> Peripheral Name Interfaces with Has events Introduced in chatBox Game Chat Yes 0.1b <p></p>"},{"location":"peripherals/chat_box/#events","title":"Events","text":""},{"location":"peripherals/chat_box/#chat","title":"chat","text":"<p>Fires when a player sends a message into the chat. Values: 1. <code>username: string</code> The username of the player who sent the message 2. <code>message: string</code> The message sent by the player 3. <code>uuid: string</code> The player's uuid 4. <code>isHidden: boolean</code> Whether the message is hidden or not</p> <pre><code>local event, username, message, uuid, isHidden = os.pullEvent(\"chat\")\nprint(\"The 'chat' event was fired with the username \" .. username .. \" and the message \" .. message)\n</code></pre> <p>Info</p> <p>The <code>chat</code> event will fire when a chatbox has been connected to a computer. You don't have to <code>.wrap()</code> or <code>.find()</code> the peripheral (unless you intend to send messages).</p>"},{"location":"peripherals/chat_box/#functions","title":"Functions","text":""},{"location":"peripherals/chat_box/#sendmessage","title":"sendMessage","text":"<p><pre><code>sendMessage(message: string[, prefix: string, brackets: string, bracketColor: string, range: number]) -&gt; true | nil, string\n</code></pre> Broadcasts a message to the global chat or if <code>range</code> is specified it is sent to all players in the range. The <code>prefix</code> will change the text that appears inside the brackets at the start of a message. Defaults to \"AP\". To change the <code>brackets</code> used around the prefix you must specify a string like so: <code>\"[]\"</code>, <code>\"()\"</code>, <code>\"&lt;&gt;\"</code>, ... <code>bracketColor</code> specifies the color to use for the brackets, this must be in the MOTD code format.</p> <p>Returns true if the message is successfully sent, or nil and an error message if it fails.</p> <pre><code>local chatBox = peripheral.find(\"chatBox\")\n\nchatBox.sendMessage(\"Hello world!\") -- Sends \"[AP] Hello world!\" in chat\nos.sleep(1) -- We must account for the cooldown between messages, this is to prevent spam\nchatBox.sendMessage(\"I am dave\", \"Dave\") -- Sends \"[Dave] I am dave\"\nos.sleep(1)\n\n-- Sends a red \"Welcome!\" message with cyan &lt;&gt; brackets around \"&lt;Box&gt;\"\n-- to players within 30 blocks of the chat box\nchatBox.sendMessage(\"\\u00A7cWelcome!\", \"Box\", \"&lt;&gt;\", \"\\u00A7b\", 30)\n</code></pre> <p>Tip</p> <p>Just like the <code>bracketColor</code> argument you can add colors to the <code>message</code> and <code>prefix</code> arguments using the same MOTD color code format.</p>"},{"location":"peripherals/chat_box/#sendmessagetoplayer","title":"sendMessageToPlayer","text":"<p><pre><code>sendMessageToPlayer(message: string, username: string[, prefix: string, brackets: string, bracketColor: string]) -&gt; true | nil, string\n</code></pre> Similar to <code>sendMessage()</code> this sends a message to one specific player. Specify the player to send the message to with the <code>username</code> parameter.</p> <pre><code>local chatBox = peripheral.find(\"chatBox\")\n\nchatBox.sendMessageToPlayer(\"Hello there.\", \"Player123\") -- Sends \"[AP] Hello there.\" to Player123 in chat\n</code></pre>"},{"location":"peripherals/chat_box/#sendformattedmessage","title":"sendFormattedMessage","text":"<p><pre><code>sendFormattedMessage(json: string[, prefix: string, brackets: string, bracketColor: string, range: number]) -&gt; true | nil, string\n</code></pre> This function is fundamentally the same as <code>sendMessage()</code> except it takes a json text component as the first parameter. Find out more information on how the text component format works on the minecraft fandom wiki. You can generate the json at minecraft.tools.</p> <pre><code>local chatBox = peripheral.find(\"chatBox\")\n\nlocal message = {\n    {text = \"Click \"}, \n    {\n        text = \"here\",\n        underlined = true,\n        color = \"aqua\",\n        clickEvent = {\n            action = \"open_url\",\n            value = \"https://advancedperipherals.madefor.cc/\"\n        }\n    },\n    {text = \" for the AP \"},\n    {text = \"documentation\", color = \"red\"},\n    {text = \"!\"}\n}\n\nlocal json = textutils.serialiseJSON(message)\n\nchatBox.sendFormattedMessage(message)\n</code></pre>"},{"location":"peripherals/chat_box/#sendformattedmessagetoplayer","title":"sendFormattedMessageToPlayer","text":"<p><pre><code>sendFormattedMessageToPlayer(json: string, username: string[, prefix: string, brackets: string, bracketColor: string]) -&gt; true | nil, string\n</code></pre> Similar to <code>sendFormattedMessage()</code> this sends a formatted message to one specific player. Specify the player to send the message to with the <code>username</code> parameter.</p>"},{"location":"peripherals/chat_box/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7r Added the <code>uuid</code> and <code>isHidden</code> parameter to the chat event. Also added the <code>sendFormattedMessage</code> function.</p> <p>4.0b Fixed the chat box so that is should now work in LAN worlds</p> <p>0.1b Added the chat box. This was the first feature of the mod.</p>"},{"location":"peripherals/colony_integrator/","title":"Colony Integrator","text":"<p>Picture</p> <p></p> <p>The colony integrator can interact with a colony from MineColonies.</p> <p>Requirement</p> <p>Requires the MineColonies mod to be installed</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in colonyIntegrator Mine Colony No 0.7r <p></p>"},{"location":"peripherals/colony_integrator/#functions","title":"Functions","text":""},{"location":"peripherals/colony_integrator/#getcitizens","title":"getCitizens","text":"<pre><code>getCitizens() -&gt; table\n</code></pre> <p>Returns a list of information about every citizen in the colony.</p>"},{"location":"peripherals/colony_integrator/#citizen-properties","title":"Citizen Properties","text":"citizen Description id: <code>string</code> The citizen's id name: <code>string</code> The citizen's name age: <code>string</code> The age of the citizen, either \"child\" or \"adult\" gender: <code>string</code> The citizen's gender, either \"male\" or \"female\" location: <code>table</code> The current location of the citizen (has <code>x</code>, <code>y</code>, <code>z</code>) bedPos: <code>table</code> The position of the citizen's bed (has <code>x</code>, <code>y</code>, <code>z</code>) saturation: <code>number</code> The citizen's food saturation happiness: <code>number</code> An indicator of how happy the citizen is health: <code>number?</code> The citizen's current health maxHealth: <code>number?</code> The citizen's max health armor: <code>number?</code> The citizen's current number of armor points toughness: <code>number?</code> The citizen's armor toughness betterFood: <code>boolean</code> Whether the citizen needs better food isAsleep: <code>boolean</code> If the citizen is currently asleep isIdle: <code>boolean</code> If the citizen is currently idle state: <code>string</code> A string representing the citizen's current state children: <code>table</code> A list of the ids of this citizen's children skills: <code>table</code> A table of skill names to skills where each skill hasa <code>level</code> and <code>xp</code> number work: <code>table?</code> A table of info about the citizen's job home: <code>table?</code> A table of info about the citizen's house"},{"location":"peripherals/colony_integrator/#work-properties","title":"Work Properties","text":"work Description name: <code>string</code> The name of the job location: <code>table</code> The work location (has <code>x</code>, <code>y</code>, <code>z</code>) type: <code>string</code> The type of job level: <code>number</code> The citizen's current job level"},{"location":"peripherals/colony_integrator/#home-properties","title":"Home Properties","text":"home Description location: <code>table</code> The home location (has <code>x</code>, <code>y</code>, <code>z</code>) type: <code>string</code> The building type level: <code>number</code> The building's level"},{"location":"peripherals/colony_integrator/#getvisitors","title":"getVisitors","text":"<p><pre><code>getVisitors() -&gt; table\n</code></pre> Returns a list of information about all of the visitors in your colony's tavern. This information is the same as the <code>citizen</code> table but there is an additional <code>recruitCost</code> string value.</p>"},{"location":"peripherals/colony_integrator/#getbuildings","title":"getBuildings","text":"<p><pre><code>getBuildings() -&gt; table\n</code></pre> Returns a list of details about every building in the colony.</p>"},{"location":"peripherals/colony_integrator/#building-properties","title":"Building Properties","text":"building Description name: <code>string</code> The name of the building location: <code>table</code> The buildings's location (has <code>x</code>, <code>y</code>, <code>z</code>) type: <code>string</code> The building type level: <code>number</code> The building's level maxLevel: <code>number</code> The building's max level style: <code>string</code> The building's style storageBlocks: <code>number</code> The number of storage blocks in the building storageSlots: <code>number</code> The number of storage slots guarded: <code>boolean</code> If the building is currently being guarded built: <code>boolean</code> If the building is built or is under construction isWorkingOn: <code>boolean</code> Whether the building is being worked on priority: <code>number</code> The building's construction priority structure: <code>table</code> A table defining the bounds of the structure citizens: <code>table</code> A list of citizen's <code>name</code>s and <code>id</code>s"},{"location":"peripherals/colony_integrator/#structure-properties","title":"Structure Properties","text":"structure Description cornerA: <code>table</code> The first corner of the bounds (has <code>x</code>, <code>y</code>, <code>z</code>) cornerB: <code>table</code> The second corner of the bounds (has <code>x</code>, <code>y</code>, <code>z</code>) rotation: <code>number</code> The structure's rotation mirror: <code>boolean</code> If the structure has been mirrored"},{"location":"peripherals/colony_integrator/#getresearch","title":"getResearch","text":"<pre><code>getResearch() -&gt; table\n</code></pre> <p>Returns a table of all possible colony research as a tree where the root table contains the branch names and their respective research.</p>"},{"location":"peripherals/colony_integrator/#properties","title":"Properties","text":"research Description id: <code>string</code> The research id name: <code>string</code> The name of the research status: <code>number</code> The current research status researchEffects: <code>table</code> A list of effects provided by the research children: <code>table?</code> A list of any child research"},{"location":"peripherals/colony_integrator/#getrequests","title":"getRequests","text":"<p><pre><code>getRequests() -&gt; table\n</code></pre> Returns a list of the colonies current requests.</p>"},{"location":"peripherals/colony_integrator/#request-properties","title":"Request Properties","text":"request Description id: <code>string</code> The request's id name: <code>string</code> The name of the request desc: <code>string</code> A description about the request state: <code>string</code> The state of the request count: <code>number</code> The number of the request minCount: <code>number</code> The minimum of the request needed target: <code>string</code> The request's target items: <code>table</code> A list of items attached to the request"},{"location":"peripherals/colony_integrator/#item-properties","title":"Item Properties","text":"item Description name: <code>string</code> The registry name of the item count: <code>number</code> The amount of the item maxStackSize: <code>number</code> Maximum stack size for the item type displayName: <code>string</code> The item's display name tags: <code>table</code> A list of item tags nbt: <code>table</code> The item's nbt data"},{"location":"peripherals/colony_integrator/#getworkorders","title":"getWorkOrders","text":"<p><pre><code>getWorkOrders() -&gt; table\n</code></pre> Returns a list of active work orders in the colony.</p>"},{"location":"peripherals/colony_integrator/#properties_1","title":"Properties","text":"workOrder Description id: <code>string</code> The work order's id priority: <code>number</code> The priority of the work order workOrderType: <code>string</code> The type of work order changed: <code>boolean</code> If the work order changed isClaimed: <code>boolean</code> Whether the work order has been claimed builder: <code>table</code> The position of the builder (has <code>x</code>, <code>y</code>, <code>z</code>) buildingName: <code>string</code> The name of the building type: <code>string</code> The type of the building targetLevel: <code>number</code> The building's target level"},{"location":"peripherals/colony_integrator/#getworkorderresources","title":"getWorkOrderResources","text":"<p><pre><code>getWorkOrderResources(workOrderId: number) -&gt; table | nil\n</code></pre> Returns a list of all of the required resources for a work order. Or nil if the work order does not exist.</p>"},{"location":"peripherals/colony_integrator/#properties_2","title":"Properties","text":"resource Description item: <code>string</code> The registry name for the item displayName: <code>string</code> The display name for the item status: <code>string</code> The status of this resource needed: <code>number</code> How much of the resource is needed for the job available: <code>boolean</code> If the resource is currently available delivering: <code>boolean</code> If the resource is currently being delivered"},{"location":"peripherals/colony_integrator/#getbuilderresources","title":"getBuilderResources","text":"<p><pre><code>getBuilderResources(position: table) -&gt; table | nil\n</code></pre> Returns the resources required by the given builder's hut.</p> <p>The <code>position</code> table must contain:  </p> <ul> <li>x: <code>number</code> </li> <li>y: <code>number</code> </li> <li>z: <code>number</code> </li> </ul>"},{"location":"peripherals/colony_integrator/#getcolonyid","title":"getColonyID","text":"<p><pre><code>getColonyID() -&gt; number\n</code></pre> Returns the id of the colony.</p>"},{"location":"peripherals/colony_integrator/#getcolonyname","title":"getColonyName","text":"<p><pre><code>getColonyName() -&gt; string\n</code></pre> Returns the name of the colony.</p>"},{"location":"peripherals/colony_integrator/#getcolonystyle","title":"getColonyStyle","text":"<p><pre><code>getColonyStyle() -&gt; string\n</code></pre> Returns the style of the colony. For a list of different colony styles click here.</p>"},{"location":"peripherals/colony_integrator/#getlocation","title":"getLocation","text":"<p><pre><code>getLocation() -&gt; table\n</code></pre> Returns the position of the townhall.</p>"},{"location":"peripherals/colony_integrator/#properties_3","title":"Properties","text":"table Description x: <code>number</code> The x coordinate y: <code>number</code> The y coordinate z: <code>number</code> The z coordinate"},{"location":"peripherals/colony_integrator/#gethappiness","title":"getHappiness","text":"<p><pre><code>getHappiness() -&gt; number\n</code></pre> Returns the overall happiness of the colony.</p>"},{"location":"peripherals/colony_integrator/#isactive","title":"isActive","text":"<p><pre><code>isActive() -&gt; boolean\n</code></pre> Returns true if the colony is active. This is true when trusted players are online.</p>"},{"location":"peripherals/colony_integrator/#isunderattack","title":"isUnderAttack","text":"<p><pre><code>isUnderAttack() -&gt; boolean\n</code></pre> Returns true if the colony is currently under attack.</p>"},{"location":"peripherals/colony_integrator/#isincolony","title":"isInColony","text":"<p><pre><code>isInColony() -&gt; boolean\n</code></pre> Returns true if the block is in a colony.</p> <pre><code>local integrator = peripheral.find(\"colonyIntegrator\")\n\nif integrator.isInColony() then\n    print(\"Block is inside a colony!\")\nelse\n    print(\"Not in a colony!\")\nend\n</code></pre>"},{"location":"peripherals/colony_integrator/#iswithin","title":"isWithin","text":"<p><pre><code>isWithin(position: table) -&gt; boolean\n</code></pre> Returns true if the given coordinates are in a colony.</p> <p>The <code>position</code> table must contain:  </p> <ul> <li>x: <code>number</code> </li> <li>y: <code>number</code> </li> <li>z: <code>number</code> </li> </ul>"},{"location":"peripherals/colony_integrator/#amountofcitizens","title":"amountOfCitizens","text":"<p><pre><code>amountOfCitizens() -&gt; number\n</code></pre> Returns the number of citizens in the colony.</p>"},{"location":"peripherals/colony_integrator/#maxofcitizens","title":"maxOfCitizens","text":"<p><pre><code>maxOfCitizens() -&gt; number\n</code></pre> Returns the maximum number of citizens the colony can currently hold.</p>"},{"location":"peripherals/colony_integrator/#amountofgraves","title":"amountOfGraves","text":"<p><pre><code>amountOfGraves() -&gt; number\n</code></pre> Returns the current number of graves.</p>"},{"location":"peripherals/colony_integrator/#amountofconstructionsites","title":"amountOfConstructionSites","text":"<p><pre><code>amountOfConstructionSites() -&gt; number\n</code></pre> Returns the current number of active construction sites.</p>"},{"location":"peripherals/colony_integrator/#examples","title":"Examples","text":""},{"location":"peripherals/colony_integrator/#citizen-monitor","title":"Citizen Monitor","text":"<p>We made a script to show every citizens and their gender on a monitor.</p> <p>You can view and download the script on Github </p>"},{"location":"peripherals/colony_integrator/#colony-stats","title":"Colony Stats","text":"<p>And here we have a script made for a pocket computer to show statistics about a colony.</p> <p>You can view and download the script on Github </p>"},{"location":"peripherals/colony_integrator/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7r Added the colony integrator</p>"},{"location":"peripherals/energy_detector/","title":"Energy Detector","text":"<p>Picture</p> <p></p> <p>The Energy Detector can detect energy flow and acts as a resistor. You can define the max flow rate to use it as a resistor.</p> <p>Bug</p> <p>The Energy Detector does not work on versions below 0.4.5b. It is recommended that you always use the latest version.</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in energyDetector Forge Energy No 0.4.1b <p></p>"},{"location":"peripherals/energy_detector/#functions","title":"Functions","text":""},{"location":"peripherals/energy_detector/#gettransferrate","title":"getTransferRate","text":"<pre><code>getTransferRate() -&gt; int\n</code></pre> <p>Returns the current energy that is going through the block.</p> <pre><code>local detector = peripheral.find(\"energyDetector\")\n\n-- prints \"Current transfer rate: xxx FE/t\"\n-- where 'xxx' is the current energy flowing through the block\nprint(\"Current transfer rate: \" .. detector.getTransferRate() .. \" FE/t\")\n</code></pre>"},{"location":"peripherals/energy_detector/#gettransferratelimit","title":"getTransferRateLimit","text":"<pre><code>getTransferRateLimit() -&gt; int\n</code></pre> <p>Returns the max rate limit of energy through the block which has been set using <code>setTransferRateLimit</code>.</p>"},{"location":"peripherals/energy_detector/#settransferratelimit","title":"setTransferRateLimit","text":"<pre><code>setTransferRateLimit(limit: int) -&gt; void\n</code></pre> <p>Set the max energy rate that will go through the block.</p> <pre><code>local detector = peripheral.find(\"energyDetector\")\n\ndetector.setTransferRateLimit(512) -- Only 512 FE/t can go through the block\n</code></pre>"},{"location":"peripherals/energy_detector/#changelogtrivia","title":"Changelog/Trivia","text":"<p>The Energy Detector had some weird problems in versions before 0.4.6b The block was able to store infinite amounts of energy or it creates an limitless amount of energy.</p> <p>0.4.6b The energy detector is now bug free. hopefully</p> <p>0.4.5b Completely changed the system of the energy detector, but the energy detector was able to drain energy without any reason.</p> <p>0.4.3b Created a crafting recipe for the detector.</p> <p>0.4.2b The energy detector is now able to send energy automatically.</p> <p>0.4.1b Added the lovely bugged energy detector.</p>"},{"location":"peripherals/environment_detector/","title":"Environment Detector","text":"<p>Picture</p> <p></p> <p>The Environment Detector provides current information from the environment like the current time, the current moon phase, the light level of the block and many more.</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in environmentDetector World No 0.1b <p></p>"},{"location":"peripherals/environment_detector/#functions","title":"Functions","text":""},{"location":"peripherals/environment_detector/#getbiome","title":"getBiome","text":"<pre><code>getBiome() -&gt; string\n</code></pre> <p>Returns the current biome the block is in.</p> <pre><code>local detector = peripheral.find(\"environmentDetector\")\n\n-- e.g. prints \"Biome: minecraft:plains\"\nprint(\"Biome: \" .. detector.getBiome())\n</code></pre>"},{"location":"peripherals/environment_detector/#getblocklightlevel","title":"getBlockLightLevel","text":"<pre><code>getBlockLightLevel() -&gt; number\n</code></pre> <p>Returns the block light level (0 to 15) at the detector block, this can be influenced by light sources</p>"},{"location":"peripherals/environment_detector/#getdaylightlevel","title":"getDayLightLevel","text":"<pre><code>getDayLightLevel() -&gt; number\n</code></pre> <p>Returns the day light level of the current world from 0 to 15. This is uneffected by blocks covering the peripheral.</p>"},{"location":"peripherals/environment_detector/#getskylightlevel","title":"getSkyLightLevel","text":"<pre><code>getSkyLightLevel() -&gt; number\n</code></pre> <p>Returns the current sky light level from 0 to 15 (like a daylight sensor).</p>"},{"location":"peripherals/environment_detector/#getdimensionname","title":"getDimensionName","text":"<pre><code>getDimensionName() -&gt; string\n</code></pre> <p>Returns the name of the current dimension (ex. <code>overworld</code>, <code>the_nether</code> or <code>the_end</code>).</p> <pre><code>local detector = peripheral.find(\"environmentDetector\")\n\n-- e.g. prints \"Dimension: the_nether\"\nprint(\"Dimension: \" .. detector.getDimensionName())\n</code></pre>"},{"location":"peripherals/environment_detector/#getdimensionpan","title":"getDimensionPaN","text":"<pre><code>getDimensionPaN() -&gt; string\n</code></pre> <p>Similar to <code>getDimensionName</code> it returns the name of the dimension prefixed with the provider name (ex. <code>minecraft:overworld</code>).</p>"},{"location":"peripherals/environment_detector/#getdimensionprovider","title":"getDimensionProvider","text":"<pre><code>getDimensionProvider() -&gt; string\n</code></pre> <p>Returns the provider of the dimension (ex. <code>minecraft</code>).</p>"},{"location":"peripherals/environment_detector/#getmoonid","title":"getMoonId","text":"<pre><code>getMoonId() -&gt; number\n</code></pre> <p>Returns the current moon phase's id.</p> <p>Info</p> <p>There are 8 different moon phases, see below a list of their names and ids</p> <p><code>0 = Full moon</code>, <code>1 = Waning gibbous</code>, <code>2 = Third quarter</code>, <code>3 = Waning crescent</code>, <code>4 = New moon</code>, <code>5 = Waxing crescent</code>, <code>6 = First quarter</code>, <code>7 = Waxing gibbous</code></p>"},{"location":"peripherals/environment_detector/#getmoonname","title":"getMoonName","text":"<pre><code>getMoonName() -&gt; string\n</code></pre> <p>Returns the current moon phase's name.</p>"},{"location":"peripherals/environment_detector/#gettime","title":"getTime","text":"<pre><code>getTime() -&gt; number\n</code></pre> <p>WIP</p> <p>Returns the daytime of the current world.</p>"},{"location":"peripherals/environment_detector/#getradiation","title":"getRadiation","text":"<pre><code>getRadiation() -&gt; table\n</code></pre> <p>Added in version 0.6.1b</p> <p>Requirement</p> <p>Requires the Mekanism mod to be installed</p> <p>Returns the current radiation level from the Mekanism mod with the radiation unit.</p>"},{"location":"peripherals/environment_detector/#properties","title":"Properties","text":"table Description radiation: <code>string</code> The current radiation level as a string unit: <code>string</code> The radiation unit"},{"location":"peripherals/environment_detector/#getradiationraw","title":"getRadiationRaw","text":"<pre><code>getRadiationRaw() -&gt; number\n</code></pre> <p>Added in version 0.6.5b</p> <p>Requirement</p> <p>Requires the Mekanism mod to be installed</p> <p>Returns the current raw radiation level in Sv/h.</p>"},{"location":"peripherals/environment_detector/#isdimension","title":"isDimension","text":"<pre><code>isDimension(dimension: string) -&gt; boolean\n</code></pre> <p>Returns true if the current dimension matches the <code>dimension</code> parameter.</p>"},{"location":"peripherals/environment_detector/#ismoon","title":"isMoon","text":"<pre><code>isMoon(moonPhaseId: number) -&gt; boolean\n</code></pre> <p>Returns true if the current moon phase matches the <code>moonPhaseId</code> parameter.</p>"},{"location":"peripherals/environment_detector/#israining","title":"isRaining","text":"<pre><code>isRaining() -&gt; boolean\n</code></pre> <p>Returns true if it is raining.</p>"},{"location":"peripherals/environment_detector/#issunny","title":"isSunny","text":"<pre><code>isSunny() -&gt; boolean\n</code></pre> <p>Returns true if it is sunny.</p>"},{"location":"peripherals/environment_detector/#isthunder","title":"isThunder","text":"<pre><code>isThunder() -&gt; boolean\n</code></pre> <p>Returns true if it is thundering.</p>"},{"location":"peripherals/environment_detector/#isslimechunk","title":"isSlimeChunk","text":"<pre><code>isSlimeChunk() -&gt; boolean\n</code></pre> <p>Returns true if the current chunk is a slime chunk.</p>"},{"location":"peripherals/environment_detector/#listdimensions","title":"listDimensions","text":"<pre><code>listDimensions() -&gt; table\n</code></pre> <p>Returns a table with all of the registered dimensions for the current world, this includes modded dimensions.</p> <p>Example</p> <p>As an example <code>listDimensions</code> might return a table like so: <pre><code>{\"minecraft:overworld\", \"minecraft:the_nether\", \"minecraft:the_end\", \"twilightforest:twilight_forest\"}\n</code></pre></p>"},{"location":"peripherals/environment_detector/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.6.5b Added <code>getRadiationRaw</code></p> <p>0.6.1b Added <code>getRadiation</code></p> <p>0.3.3b Added many more functions to the environment detector. The environment detector was a useless block before this update.</p> <p>0.1b Added the block. It was the second feature of the mod.</p>"},{"location":"peripherals/geo_scanner/","title":"Geo Scanner","text":"<p>Picture</p> <p></p> <p>The Geo Scanner provides information about blocks around it and the chunk of that it is in.</p> <p>The Geo scanner has a delay between scans, so you must wait until you can scan again.</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in geoScanner Blocks No 0.7r <p></p>"},{"location":"peripherals/geo_scanner/#functions","title":"Functions","text":""},{"location":"peripherals/geo_scanner/#getfuellevel","title":"getFuelLevel","text":"<pre><code>getFuelLevel() -&gt; number\n</code></pre> <p>Returns the amount of stored fuel.</p>"},{"location":"peripherals/geo_scanner/#getfuelmaxlevel","title":"getFuelMaxLevel","text":"<pre><code>getFuelMaxLevel() -&gt; number\n</code></pre> <p>Returns the maximum amount of possible stored fuel.</p>"},{"location":"peripherals/geo_scanner/#cost","title":"cost","text":"<pre><code>cost(radius: number) -&gt; number\n</code></pre> <p>Returns the cost in FE for a scan with the given <code>radius</code>.</p>"},{"location":"peripherals/geo_scanner/#scan","title":"scan","text":"<pre><code>scan(radius: number) -&gt; table | nil, string\n</code></pre> <p>Returns a list of data about all blocks in the radius. Or if the scan fails it returns nil and an error message.</p>"},{"location":"peripherals/geo_scanner/#block-properties","title":"Block Properties","text":"block Description name: <code>string</code> The registry name of the block tags: <code>table</code> A list of block tags x: <code>number</code> The block's x coordinate y: <code>number</code> The block's y coordinate z: <code>number</code> The block's z coordinate"},{"location":"peripherals/geo_scanner/#getscancooldown","title":"getScanCooldown","text":"<pre><code>getScanCooldown() -&gt; number\n</code></pre> <p>Returns the current time remaining until then next <code>scan()</code> can be ran.</p>"},{"location":"peripherals/geo_scanner/#chunkanalyze","title":"chunkAnalyze","text":"<pre><code>chunkAnalyze() -&gt; table | nil, reason\n</code></pre> <p>Returns a table of data about how many of each ore type is in the block's chunk. Or if the analyze fails it returns nil and an error message.</p>"},{"location":"peripherals/geo_scanner/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7r Added Geo Scanner peripheral.</p>"},{"location":"peripherals/inventory_manager/","title":"Inventory Manager","text":"<p>Picture</p> <p></p> <p>The Inventory Manager can communicate with the player's inventory. You need to assign yourself to a Memory Card and put the card into the manager to use it.</p> <p>Note</p> <p>Only one Memory Card can be used per Inventory Manager.</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in inventoryManager Player Inventory No 0.5b <p></p>"},{"location":"peripherals/inventory_manager/#functions","title":"Functions","text":"<p>Deprecated! Will be replaced in the next major version to unify <code>addItemToPlayer</code> and <code>addItemToPlayerNBT</code></p>"},{"location":"peripherals/inventory_manager/#additemtoplayer","title":"addItemToPlayer","text":"<pre><code>addItemToPlayer(direction: string, count: number[, slot: number, item: string]) -&gt; number\n</code></pre> <p>Adds an item to the player's inventory and returns the amount of the item added. The <code>direction</code> is the direction of the container relative to the peripheral. The <code>slot</code> is the slot to take items from in the container. The Inventory Manager will add a random item to the player's inventory if the <code>item</code> or <code>slot</code> argument are not provided. The <code>slot</code> and <code>count</code> are overwritten if <code>fromSlot</code> or <code>count</code> is specified in the <code>item</code> filter if the <code>item</code> argument is empty, the manager will move any item.</p> <p>Since version 0.7r</p> <p>You can now use both relative (<code>right</code>, <code>left</code>, <code>front</code>, <code>back</code>, <code>top</code>, <code>bottom</code>) and cardinal (<code>north</code>, <code>south</code>, <code>east</code>, <code>west</code>, <code>up</code>, <code>down</code>) directions for the <code>direction</code> argument.  </p> <pre><code>local manager = peripheral.find(\"inventoryManager\")\n\n-- Add 32 cobblestone to the players offhand slot from the block above\nmanager.addItemToPlayer(\"up\", 32, nil, {name=\"minecraft:cobblestone\", toSlot=36})\n</code></pre> <p>Deprecated! Will be replaced in the next major version to unify <code>addItemToPlayer</code> and <code>addItemToPlayerNBT</code></p>"},{"location":"peripherals/inventory_manager/#additemtoplayernbt","title":"addItemToPlayerNBT","text":"<pre><code>addItemToPlayerNBT(direction: string, count: number[, slot: number, item: table]) -&gt; number\n</code></pre> <p>Adds an item to the player's inventory and returns the amount of the item added. The <code>direction</code> is the direction of the container relative to the peripheral. The <code>slot</code> is the slot to take items from in the container. The Inventory Manager will add a random item to the player's inventory if the <code>item</code> or <code>slot</code> argument are not provided.</p> <p>Since version 0.7r</p> <p>You can now use both relative (<code>right</code>, <code>left</code>, <code>front</code>, <code>back</code>, <code>top</code>, <code>bottom</code>) and cardinal (<code>north</code>, <code>south</code>, <code>east</code>, <code>west</code>, <code>up</code>, <code>down</code>) directions for the <code>direction</code> argument.  </p> <pre><code>local manager = peripheral.find(\"inventoryManager\")\n\n-- Add 32 dirt to the players inventory from the block above\nmanager.addItemToPlayer(\"up\", 32, nil, \"minecraft:dirt\")\n</code></pre> <p>Deprecated! Will be replaced in the next major version to unify <code>removeItemFromPlayer</code> and <code>removeItemFromPlayerNBT</code></p>"},{"location":"peripherals/inventory_manager/#removeitemfromplayer","title":"removeItemFromPlayer","text":"<pre><code>removeItemFromPlayer(direction: string, count: number[, slot: number, item: string]) -&gt; number\n</code></pre> <p>Removes an item from the player's inventory and returns the amount of the item removed. The <code>direction</code> is the direction of the container relative to the peripheral to put the item into. The <code>slot</code> is the slot to take items from in the player's inventory. The Inventory Manager will remove a random item from the player's inventory if the <code>item</code> or <code>slot</code> argument are not provided.</p> <pre><code>local manager = peripheral.find(\"inventoryManager\")\n\n-- Remove up to 5 of the item in slot 1 of the player's inventory\n-- and place it in the block above\nmanager.removeItemFromPlayer(\"up\", 5, 1)\n</code></pre> <p>Deprecated! Will be replaced in the next major version to unify <code>removeItemFromPlayer</code> and <code>removeItemFromPlayerNBT</code></p>"},{"location":"peripherals/inventory_manager/#removeitemfromplayernbt","title":"removeItemFromPlayerNBT","text":"<pre><code>removeItemFromPlayerNBT(direction: string, count: number[, slot: number, item: table]) -&gt; number\n</code></pre> <p>Removes an item from the player's inventory and returns the amount of the item removed. The <code>direction</code> is the direction of the container relative to the peripheral to put the item into. The <code>slot</code> is the slot to take items from in the player's inventory. The Inventory Manager will remove a random item from the player's inventory if the <code>item</code> or <code>slot</code> argument are not provided. The <code>slot</code> and <code>count</code> are overwritten if <code>fromSlot</code> or <code>count</code> is specified in the <code>item</code> filter if the <code>item</code> argument is empty, the manager will move any item.</p> <pre><code>local manager = peripheral.find(\"inventoryManager\")\n\n-- Remove up to 5 of the item in slot 1 of the player's inventory\n-- and place it in the block above\nmanager.removeItemFromPlayerNBT(\"up\", 5, 1, {name=\"minecraft:cobblestone\", toSlot=3})\n</code></pre>"},{"location":"peripherals/inventory_manager/#getarmor","title":"getArmor","text":"<pre><code>getArmor() -&gt; table\n</code></pre> <p>Returns a list of the player's current armor slots</p>"},{"location":"peripherals/inventory_manager/#item-properties","title":"Item Properties","text":"item Description name: <code>string</code> The registry name of the item count: <code>number</code> The amount of the item maxStackSize: <code>number</code> Maximum stack size for the item type displayName: <code>string</code> The item's display name slot: <code>number</code> The slot that the item stack is in tags: <code>table</code> A list of item tags nbt: <code>table</code> The item's nbt data <pre><code>local manager = peripheral.find(\"inventoryManager\")\n\nlocal armor = manager.getArmor()\nprint(\"First armor piece is: \" .. armor[1].displayName)\n</code></pre>"},{"location":"peripherals/inventory_manager/#getitems","title":"getItems","text":"<pre><code>getItems() -&gt; table\n</code></pre> <p>Returns the contents of the player's inventory as a list of items</p>"},{"location":"peripherals/inventory_manager/#item-properties_1","title":"Item Properties","text":"item Description name: <code>string</code> The registry name of the item count: <code>number</code> The amount of the item maxStackSize: <code>number</code> Maximum stack size for the item type slot: <code>number</code> The slot that the item stack is in displayName: <code>string</code> The item's display name tags: <code>table</code> A list of item tags nbt: <code>table</code> The item's nbt data"},{"location":"peripherals/inventory_manager/#getowner","title":"getOwner","text":"<pre><code>getOwner() -&gt; string | nil\n</code></pre> <p>Returns the username of the owner of the memory card in the manager or nil if there is no memory card or owner.</p>"},{"location":"peripherals/inventory_manager/#isplayerequipped","title":"isPlayerEquipped","text":"<pre><code>isPlayerEquipped() -&gt; boolean\n</code></pre> <p>Returns true if the player is wearing atleast one piece of armor.</p>"},{"location":"peripherals/inventory_manager/#iswearing","title":"isWearing","text":"<pre><code>isWearing(slot: number) -&gt; boolean\n</code></pre> <p>Returns true if the player is wearing a armor piece on the given slot. Slots: <code>103</code>(Helmet) - <code>100</code>(Boots).</p>"},{"location":"peripherals/inventory_manager/#getiteminhand","title":"getItemInHand","text":"<pre><code>getItemInHand() -&gt; table\n</code></pre> <p>Added in version 0.7.4r</p> <p>Returns the item in the player's main hand.</p>"},{"location":"peripherals/inventory_manager/#item-properties_2","title":"Item Properties","text":"item Description name: <code>string</code> The registry name of the item count: <code>number</code> The amount of the item maxStackSize: <code>number</code> Maximum stack size for the item type displayName: <code>string</code> The item's display name tags: <code>table</code> A list of item tags nbt: <code>table</code> The item's nbt data"},{"location":"peripherals/inventory_manager/#getiteminoffhand","title":"getItemInOffHand","text":"<pre><code>getItemInOffHand() -&gt; table\n</code></pre> <p>Added in version 0.7.4r</p> <p>Returns the item in the player's off hand.</p>"},{"location":"peripherals/inventory_manager/#item-properties_3","title":"Item Properties","text":"item Description name: <code>string</code> The registry name of the item count: <code>number</code> The amount of the item maxStackSize: <code>number</code> Maximum stack size for the item type displayName: <code>string</code> The item's display name tags: <code>table</code> A list of item tags nbt: <code>table</code> The item's nbt data"},{"location":"peripherals/inventory_manager/#getfreeslot","title":"getFreeSlot","text":"<pre><code>getFreeSlot() -&gt; number\n</code></pre> <p>Added in version 0.7.4r</p> <p>Returns the next free slot in the player's inventory. Or -1 if their inventory is full.</p>"},{"location":"peripherals/inventory_manager/#isspaceavailable","title":"isSpaceAvailable","text":"<pre><code>isSpaceAvailable() -&gt; boolean\n</code></pre> <p>Added in version 0.7.4r</p> <p>Returns true if space is available in the player's inventory.</p>"},{"location":"peripherals/inventory_manager/#getemptyspace","title":"getEmptySpace","text":"<pre><code>getEmptySpace() -&gt; number\n</code></pre> <p>Added in version 0.7.4r</p> <p>Returns the number of empty slots in the player's inventory.</p>"},{"location":"peripherals/inventory_manager/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.4r Added <code>getItemInHand</code>, <code>getItemInOffHand</code>, <code>getFreeSlot</code>, <code>isSpaceAvailable</code> and <code>getEmptySpace</code> to the inventory manager. Added support for armor items, you can use the slots <code>100 - 103</code> to access armor items.</p> <p>0.7r Added the <code>slot</code> parameter. Also changed the direction parameter to computercraft directions.</p> <p>0.5.2b Fixed the bug where the inventory manager does not drop its contents.</p> <p>0.5b Added the Inventory Manager and Memory Card</p>"},{"location":"peripherals/me_bridge/","title":"ME Bridge","text":"<p>Picture</p> <p></p> <p>The ME Bridge is able to interact with Applied Energistics 2. You can retrieve items, craft items, get all items as a list and more. The ME Bridge uses one channel.</p> <p>Requirement</p> <p>Requires the Applied Energistics 2 mod to be installed</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in meBridge ME System Yes 0.3b <p></p>"},{"location":"peripherals/me_bridge/#events","title":"Events","text":""},{"location":"peripherals/me_bridge/#crafting","title":"crafting","text":"<p>Fires when a crafting job starts or fails. Values: 1. <code>success: boolean</code> Indicates whether a crafting job has successfully started or not 2. <code>message: string</code> A message about the status of the crafting job These values are equivalent to the return values of <code>craftItem()</code>.</p> <pre><code>local event, success, message = os.pullEvent(\"crafting\")\nif success then\n    print(\"A crafting job has successfully started\")\nelse\n    print(\"A crafting job has failed to start\")\nend\n</code></pre> <p>Info</p> <p>The <code>crafting</code> event will fire when the ME Bridge is connected to an active ME System that is performing crafting operations.</p> <p>Tip</p> <p>You can use the command <code>/advancedperipherals getHashItem</code> with an item in your hand to get the MD5 hash of the NBT tags of the item. An MD5 Hash can look like this <code>ae70053c97f877de546b0248b9ddf525</code>.</p>"},{"location":"peripherals/me_bridge/#functions","title":"Functions","text":""},{"location":"peripherals/me_bridge/#craftitem","title":"craftItem","text":"<pre><code>craftItem(item: table[, craftingCpu: string]) -&gt; boolean, err: string\n</code></pre> <p>Tries to craft the provided <code>item</code>. If a <code>craftingCpu</code>'s name is provided then it will use that cpu to craft the <code>item</code>.</p>"},{"location":"peripherals/me_bridge/#item-properties","title":"Item Properties","text":"item Description name: <code>string</code> The registry name of the item count: <code>number?</code> The amount of the item to craft nbt: <code>string?</code> NBT to match the item on json: <code>string?</code> The same as <code>nbt</code> but as a json string tag: <code>string?</code> The item tag(s) to match on <p>OR </p> item Description fingerprint: <code>string</code> A unique fingerprint which identifies theitem to craft count: <code>number?</code> The amount of the item to craft"},{"location":"peripherals/me_bridge/#getitem","title":"getItem","text":"<pre><code>getItem(item: table) -&gt; table, err: string\n</code></pre> <p>Returns a table with information about the item type in the system.</p>"},{"location":"peripherals/me_bridge/#properties","title":"Properties","text":"result Description name: <code>string</code> The registry name of the item fingerprint: <code>string?</code> A unique fingerprint which identifies the item to craft amount: <code>number</code> The amount of the item in the system displayName: <code>string</code> The display name for the item isCraftable: <code>boolean</code> Whether the item has a crafting pattern or not nbt: <code>string?</code> NBT to match the item on tags: <code>table</code> A list of all of the item tags"},{"location":"peripherals/me_bridge/#importitem","title":"importItem","text":"<pre><code>importItem(item: table, direction: string) -&gt; number, err: string\n</code></pre> <p>Imports an <code>item</code> from a container in the <code>direction</code> to the ME System. Returns the number of the <code>item</code> imported into the system.</p> <p>Since version 0.7r</p> <p>You can now use both relative (<code>right</code>, <code>left</code>, <code>front</code>, <code>back</code>, <code>top</code>, <code>bottom</code>) and cardinal (<code>north</code>, <code>south</code>, <code>east</code>, <code>west</code>, <code>up</code>, <code>down</code>) directions for the <code>direction</code> argument.  </p> <pre><code>local bridge = peripheral.find(\"meBridge\")\n\n-- Imports 32 dirt from the container above into the system\nbridge.importItem({name=\"minecraft:dirt\", count=1}, \"up\")\n</code></pre>"},{"location":"peripherals/me_bridge/#exportitem","title":"exportItem","text":"<pre><code>exportItem(item: table, direction: string) -&gt; number, err: string\n</code></pre> <p>Exports an <code>item</code> to a container in the <code>direction</code> from the ME bridge block. Returns the number of the <code>item</code> exported into the container.</p> <pre><code>local bridge = peripheral.find(\"meBridge\")\n\n-- Exports 1 \"Protection I\" book into the container above\nbridge.exportItem({name=\"minecraft:enchanted_book\", count=1, nbt=\"ae70053c97f877de546b0248b9ddf525\"}, \"up\")\n</code></pre>"},{"location":"peripherals/me_bridge/#importitemfromperipheral","title":"importItemFromPeripheral","text":"<pre><code>importItemFromPeripheral(item: table, container: string) -&gt; number, err: string\n</code></pre> <p>Similar to <code>importItem()</code> it imports an <code>item</code> from a container which is connected to the peripheral network. <code>container</code> should be the exact name of the container peripheral on the network. Returns the number of the <code>item</code> imported from the container.</p>"},{"location":"peripherals/me_bridge/#exportitemtoperipheral","title":"exportItemToPeripheral","text":"<pre><code>exportItemToPeripheral(item: table, container: string) -&gt; number, err: string\n</code></pre> <p>Similar to <code>exportItem()</code> it exports an <code>item</code> to a container which is connected to the peripheral network. <code>container</code> should be the exact name of the container peripheral on the network. Returns the number of the <code>item</code> exported into the container.</p>"},{"location":"peripherals/me_bridge/#getenergystorage","title":"getEnergyStorage","text":"<pre><code>getEnergyStorage() -&gt; number, err: string\n</code></pre> <p>Returns the stored energy of the whole ME System in AE.</p>"},{"location":"peripherals/me_bridge/#getmaxenergystorage","title":"getMaxEnergyStorage","text":"<pre><code>getMaxEnergyStorage() -&gt; number, err: string\n</code></pre> <p>Returns the maximum energy storage capacity of the whole ME system in AE.</p>"},{"location":"peripherals/me_bridge/#getenergyusage","title":"getEnergyUsage","text":"<pre><code>getEnergyUsage() -&gt; number, err: string\n</code></pre> <p>Returns the energy usage of the whole ME System in AE/t.</p>"},{"location":"peripherals/me_bridge/#getcraftingcpus","title":"getCraftingCPUs","text":"<pre><code>getCraftingCPUs() -&gt; table, err: string\n</code></pre> <p>Returns a list of all connected crafting cpus.</p>"},{"location":"peripherals/me_bridge/#cpu-properties","title":"CPU Properties","text":"cpu Description storage: <code>number</code> The amount of storage the CPU has coProcessors: <code>number</code> The number of coprocessors the CPU has isBusy: <code>boolean</code> If the cpu is currently crafting"},{"location":"peripherals/me_bridge/#isitemcrafting","title":"isItemCrafting","text":"<pre><code>isItemCrafting(item: table[, craftingCpu: string]) -&gt; boolean, err: string\n</code></pre> <p>Returns true if a crafting job for the <code>item</code> exists. If a <code>craftingCpu</code>'s name is provided then it will check only if that cpu is crafting the <code>item</code>.</p>"},{"location":"peripherals/me_bridge/#isitemcraftable","title":"isItemCraftable","text":"<pre><code>isItemCraftable(item: table) -&gt; boolean, err: string\n</code></pre> <p>Returns true if the <code>item</code> is craftable.</p>"},{"location":"peripherals/me_bridge/#listcraftableitems","title":"listCraftableItems","text":"<pre><code>listCraftableItems() -&gt; table, err: string\n</code></pre> <p>Returns a list of information about all craftable items</p>"},{"location":"peripherals/me_bridge/#properties_1","title":"Properties","text":"item / fluid Description name: <code>string</code> The registry name of the item fingerprint: <code>string?</code> A unique fingerprint which identifies the item to craft amount: <code>number</code> The amount of the item in the system displayName: <code>string</code> The display name for the item isCraftable: <code>boolean</code> Whether the item has a crafting pattern or not nbt: <code>string?</code> NBT to match the item on tags: <code>table</code> A list of all of the item tags <pre><code>local bridge = peripheral.find(\"meBridge\")\n\n-- print out all craftable items\ncraftableItems = bridge.listCraftableItems()\nfor _, item in pairs(craftableItems) do\n    print(item.name)\nend\n</code></pre>"},{"location":"peripherals/me_bridge/#listcraftablefluid","title":"listCraftableFluid","text":"<pre><code>listCraftableFluid() -&gt; table, err: string\n</code></pre> <p>Returns a list of information about all craftable fluids</p>"},{"location":"peripherals/me_bridge/#listitems","title":"listItems","text":"<pre><code>listItems() -&gt; table, err: string\n</code></pre> <p>Returns a list of information about all items in the ME System.</p>"},{"location":"peripherals/me_bridge/#listfluid","title":"listFluid","text":"<pre><code>listFluid() -&gt; table, err: string\n</code></pre> <p>Returns a list of information about all fluids in the ME System.</p> <p>Added in version 1.18.2-0.7.24r | 1.19.2-0.7.23b</p>"},{"location":"peripherals/me_bridge/#listcells","title":"listCells","text":"<pre><code>listFluid() -&gt; table, err: string\n</code></pre> <p>Returns a list of information about all cells in the disk drives of the ME System.</p> cpu Description item: <code>string</code> The name of the cell. e.g. `ae2:64k_storage_cell cellType: <code>string</code> The type of the cell. <code>item</code> or <code>fluid</code> bytesPerType: <code>int</code> The bytes per type totalBytes: <code>int</code> Total available bytes of the cell <p>Added in version 1.18.2-0.7.24r | 1.19.2-0.7.23b</p>"},{"location":"peripherals/me_bridge/#gettotalitemstorage","title":"getTotalItemStorage","text":"<pre><code>getTotalItemStorage() -&gt; int, err: string\n</code></pre> <p>Returns how much total item storage the system offers</p> <p>Added in version 1.18.2-0.7.24r | 1.19.2-0.7.23b</p>"},{"location":"peripherals/me_bridge/#gettotalfluidstorage","title":"getTotalFluidStorage","text":"<pre><code>getTotalFluidStorage() -&gt; int, err: string\n</code></pre> <p>Returns how much total fluid storage the system offers</p> <p>Added in version 1.18.2-0.7.24r | 1.19.2-0.7.23b</p>"},{"location":"peripherals/me_bridge/#getuseditemstorage","title":"getUsedItemStorage","text":"<pre><code>getUsedItemStorage() -&gt; int, err: string\n</code></pre> <p>Returns how much item storage is used</p> <p>Added in version 1.18.2-0.7.24r | 1.19.2-0.7.23b</p>"},{"location":"peripherals/me_bridge/#getusedfluidstorage","title":"getUsedFluidStorage","text":"<pre><code>getUsedFluidStorage() -&gt; int, err: string\n</code></pre> <p>Returns how much fluid storage is used</p> <p>Added in version 1.18.2-0.7.24r | 1.19.2-0.7.23b</p>"},{"location":"peripherals/me_bridge/#getavailableitemstorage","title":"getAvailableItemStorage","text":"<pre><code>getAvailableItemStorage() -&gt; int, err: string\n</code></pre> <p>Returns how much item storage is available</p> <p>Added in version 1.18.2-0.7.24r | 1.19.2-0.7.23b</p>"},{"location":"peripherals/me_bridge/#getavailablefluidstorage","title":"getAvailableFluidStorage","text":"<pre><code>getAvailableFluidStorage() -&gt; int, err: string\n</code></pre> <p>Returns how much fluid storage is available</p>"},{"location":"peripherals/me_bridge/#examples","title":"Examples","text":""},{"location":"peripherals/me_bridge/#automatic-autocrafting","title":"Automatic Autocrafting","text":"<p>This script automatically crafts items in a list. Do you want 500 glass in your me system at all times? Add glass to the list and the script will craft it for you. No need for level emitters or crafting cards!</p> <p>You can find instructions on how to install the script here</p> <p></p>"},{"location":"peripherals/me_bridge/#me-crafting-cpus","title":"ME Crafting CPUs","text":"<p>This script shows you some statistics about the ME crafting cpus.</p> <p>You can find instructions on how to install the script here</p> <p></p>"},{"location":"peripherals/me_bridge/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7r The ME Bridge does uses computercraft relative and cardinal directions. We also changed some function names.</p> <p>0.4b Reworked the system of the ME Bridge, it now has more features and a new system for the <code>item</code> parameter.</p> <p>0.3.9b Added the <code>importItem</code> and <code>exportItem</code> from container functions.</p> <p>0.3b Added the ME Bridge with a good amount of features.</p>"},{"location":"peripherals/nbt_storage/","title":"NBT Storage","text":"<p>Picture</p> <p></p> <p>NBT Storage is a custom block that allows reading and writing of NBT data to the block for later use.</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in nbtStorage NBT No 0.7r <p></p>"},{"location":"peripherals/nbt_storage/#functions","title":"Functions","text":""},{"location":"peripherals/nbt_storage/#read","title":"read","text":"<pre><code>read() -&gt; table\n</code></pre> <p>Returns the NBT data stored in the block.</p>"},{"location":"peripherals/nbt_storage/#writejson","title":"writeJson","text":"<pre><code>writeJson(json: string) -&gt; boolean | nil, string\n</code></pre> <p>Writes the json as NBT data into the block and returns true if the json is valid and the data is successfully written. Otherwise it returns nil and an error message.</p>"},{"location":"peripherals/nbt_storage/#writetable","title":"writeTable","text":"<pre><code>writeTable(nbt: table) -&gt; boolean | nil, string\n</code></pre> <p>Writes NBT data into the block and returns true if the data is successfully written. Otherwise it returns nil and an error message.</p> <pre><code>local storage = peripheral.find(\"nbtStorage\")\n\nstorage.writeTable({\n    specialString = \"A super special string\"\n})\n\nlocal nbt = storage.read()\n-- prints \"A super special string\"\nprint(nbt.specialString)\n</code></pre>"},{"location":"peripherals/nbt_storage/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7r Added NBT Storage block.</p>"},{"location":"peripherals/player_detector/","title":"Player Detector","text":"<p>Picture</p> <p></p> <p>The Player Detector is a useful peripheral that allows you to detect players within a certain range, position and area. You can get a list of all online players and detect when a player clicks on the block.</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in playerDetector Players Yes 0.1b <p></p>"},{"location":"peripherals/player_detector/#events","title":"Events","text":""},{"location":"peripherals/player_detector/#playerclick","title":"playerClick","text":"<p>Fires when a player clicks on the block. Values: 1. <code>username: string</code> The username of the player who clicked the block  </p> <pre><code>local event, username = os.pullEvent(\"playerClick\")\nprint(\"The detector was clicked by \" .. username)\n</code></pre> <p>Info</p> <p>The <code>playerClick</code> event will fire when a player detector has been connected to a computer. You don't have to <code>.wrap()</code> or <code>.find()</code> the peripheral (unless you intend to send messages).</p>"},{"location":"peripherals/player_detector/#functions","title":"Functions","text":""},{"location":"peripherals/player_detector/#getplayerpos","title":"getPlayerPos","text":"<pre><code>getPlayerPos(username: string) -&gt; table | nil\n</code></pre> <p>Returns the position of the player with the <code>username</code> passed.</p>"},{"location":"peripherals/player_detector/#properties","title":"Properties","text":"<p>Added more properties in version 0.7.4r</p> table Description dimension: <code>string</code> The dimension the player is in (will be thesame as the peripheral's dimension) eyeHeight: <code>number</code> The height of the player's eyes pitch: <code>number</code> The pitch of the player's head yaw: <code>number</code> The yaw of the player's head (ie. thedirection they are looking) x: <code>number</code> The x coordinate y: <code>number</code> The y coordinate z: <code>number</code> The z coordinate <pre><code>local detector = peripheral.find(\"playerDetector\")\n\n-- Get the position of Player123 and print their coordinates\nlocal pos = detector.getPlayerPos(\"Player123\")\nprint(\"Position: \" .. pos.x .. \",\" .. pos.y .. \",\" .. pos.z)\n</code></pre>"},{"location":"peripherals/player_detector/#getonlineplayers","title":"getOnlinePlayers","text":"<pre><code>getOnlinePlayers() -&gt; table\n</code></pre> <p>Added in version 0.7r</p> <p>Returns a list of all online players.</p>"},{"location":"peripherals/player_detector/#getplayersinrange","title":"getPlayersInRange","text":"<pre><code>getPlayersInRange(range: number) -&gt; table\n</code></pre> <p>Returns a list of players within the given <code>range</code> of the peripheral.</p> <p>Note</p> <p>The center of the <code>range</code> is the Player Detector peripheral and not the Computer.</p>"},{"location":"peripherals/player_detector/#getplayersincoords","title":"getPlayersInCoords","text":"<pre><code>getPlayersInCoords(posOne: table, posTwo: table) -&gt; table\n</code></pre> <p>Added in version 0.7r</p> <p>Returns a list of players within the 2 positions <code>posOne</code> and <code>posTwo</code>.</p> <p>The <code>posOne</code> and <code>posTwo</code> tables must contain:  </p> <ul> <li>x: <code>number</code> </li> <li>y: <code>number</code> </li> <li>z: <code>number</code> </li> </ul>"},{"location":"peripherals/player_detector/#getplayersincubic","title":"getPlayersInCubic","text":"<pre><code>getPlayersInCubic(w: number, h: number, d: number) -&gt; table\n</code></pre> <p>Added in version 0.7r</p> <p>Returns a list of players within a cuboid centered at the peripheral. Where <code>w</code>, <code>h</code>, <code>d</code> correspond to the x, y, z axes and are the width, height and depth of the cuboid.</p>"},{"location":"peripherals/player_detector/#isplayerinrange","title":"isPlayerInRange","text":"<pre><code>isPlayerInRange(range: number, username: string) -&gt; boolean\n</code></pre> <p>Returns true if the player whose username matches the provided <code>username</code> is without the given <code>range</code> of the peripheral.</p>"},{"location":"peripherals/player_detector/#isplayerincoords","title":"isPlayerInCoords","text":"<pre><code>isPlayerInCoords(posOne: table, posTwo: table, username: string) -&gt; boolean\n</code></pre> <p>Added in version 0.7r</p> <p>Returns true if the player is within the 2 positions.</p> <p>The <code>posOne</code> and <code>posTwo</code> tables must contain:  </p> <ul> <li>x: <code>number</code> </li> <li>y: <code>number</code> </li> <li>z: <code>number</code> </li> </ul>"},{"location":"peripherals/player_detector/#isplayerincubic","title":"isPlayerInCubic","text":"<pre><code>isPlayerInCubic(w: number, h: number, d: number)\n</code></pre> <p>Added in version 0.7r</p> <p>Returns true if the player is within the cuboid centered at the peripheral. Where <code>w</code>, <code>h</code>, <code>d</code> correspond to the x, y, z axes and are the width, height and depth of the cuboid.</p>"},{"location":"peripherals/player_detector/#isplayersinrange","title":"isPlayersInRange","text":"<pre><code>isPlayersInRange(range: number) -&gt; boolean\n</code></pre> <p>Returns true if there is any player in the given <code>range</code>.</p>"},{"location":"peripherals/player_detector/#isplayersincoords","title":"isPlayersInCoords","text":"<pre><code>isPlayersInCoords(posOne: table, posTwo: table) -&gt; boolean\n</code></pre> <p>Added in version 0.7r</p> <p>Returns true if any player is within the 2 positions.</p> <p>The <code>posOne</code> and <code>posTwo</code> tables must contain:  </p> <ul> <li>x: <code>number</code> </li> <li>y: <code>number</code> </li> <li>z: <code>number</code> </li> </ul>"},{"location":"peripherals/player_detector/#isplayersincubic","title":"isPlayersInCubic","text":"<pre><code>isPlayersInCubic(w: number, h: number, d: number)\n</code></pre> <p>Added in version 0.7r</p> <p>Returns true if any player is within the cuboid centered at the peripheral. Where <code>w</code>, <code>h</code>, <code>d</code> correspond to the x, y, z axes and are the width, height and depth of the cuboid.</p>"},{"location":"peripherals/player_detector/#changelogtrivia","title":"Changelog/Trivia","text":"<p>In early versions the player detector was also a buggy block, like the energy detector. We had bugs where the block used completely wrong coordinates or the range parameters did not work.</p> <p>0.7.4r Added more information to the <code>getPlayerPos</code> function. (Configurable)</p> <p>0.7r Added more functions to the player detector. One to define the range in every 3 axes, one to define 2 positions. Also added <code>getOnlinePlayers</code>.</p> <p>0.4.2b Added a max range config value.</p> <p>0.3b Added the functions <code>isPlayersInRange</code> and <code>isPlayerinRange</code>.</p> <p>0.2.6b Added the function <code>getPlayersInRange</code>.</p> <p>0.1b Added the player detector, it was the third feature of the mod.</p>"},{"location":"peripherals/redstone_integrator/","title":"Redstone Integrator","text":"<p>Picture</p> <p></p> <p>The Redstone Integrator is able to interact with redstone. You can use the same code you would use for a computer on a Redstone Integrator.</p> <p>You may need this peripheral for cases where you need to output redstone signals on more sides than a regular computer has to offer.</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in redstoneIntegrator Redstone No 0.5.3b <p></p>"},{"location":"peripherals/redstone_integrator/#functions","title":"Functions","text":""},{"location":"peripherals/redstone_integrator/#getinput","title":"getInput","text":"<pre><code>getInput(side: string) -&gt; boolean\n</code></pre> <p>Returns true or false depending on if the redstone at the given <code>side</code> is on.</p> <p>Since version 0.7r</p> <p>You can now use both relative (<code>right</code>, <code>left</code>, <code>front</code>, <code>back</code>, <code>top</code>, <code>bottom</code>) and cardinal (<code>north</code>, <code>south</code>, <code>east</code>, <code>west</code>, <code>up</code>, <code>down</code>) directions for the <code>side</code> argument.  </p>"},{"location":"peripherals/redstone_integrator/#getoutput","title":"getOutput","text":"<pre><code>getOutput(side: string) -&gt; boolean\n</code></pre> <p>Returns true or false depending on if the Redstone Integrator is sending a signal to the given <code>side</code>.</p>"},{"location":"peripherals/redstone_integrator/#getanaloginput","title":"getAnalogInput","text":"<pre><code>getAnalogInput(side: string) -&gt; number\n</code></pre> <p>Returns the redstone level input on the given <code>side</code>.</p> <p>Tip</p> <p>You can also use <code>Analogue</code> instead of <code>Analog</code> (ex. <code>getAnalogueInput</code>) both work exactly the same.</p>"},{"location":"peripherals/redstone_integrator/#getanalogoutput","title":"getAnalogOutput","text":"<pre><code>getAnalogOutput(side: string) -&gt; number\n</code></pre> <p>Returns the redstone level being output by the Redstone Integrator on the given <code>side</code>.</p>"},{"location":"peripherals/redstone_integrator/#setoutput","title":"setOutput","text":"<pre><code>setOutput(side: string, powered: boolean) -&gt; void\n</code></pre> <p>Sets the redstone level output to 0 or 15 on the given <code>side</code> depending on <code>powered</code>.</p> <pre><code>local integrator = peripheral.find(\"redstoneIntegrator\")\n\nprint(\"Left redstone level: \".. integrator.getAnalogInput(\"left\")) -- prints the level of the redstone at the left side.\nprint(\"Right redstone: \".. integrator.getOutput(\"right\")) -- prints whether there is a redstone output on the right side.\nintegrator.setOutput(\"top\", true) -- Sets the redstone level to 15 for the top side.\n</code></pre>"},{"location":"peripherals/redstone_integrator/#setanalogoutput","title":"setAnalogOutput","text":"<pre><code>setAnalogOutput(side: string, power: number) -&gt; void\n</code></pre> <p>Sets the redstone level output on the given <code>side</code> to the given <code>power</code> level.</p>"},{"location":"peripherals/redstone_integrator/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.5.3b Added the lovely Redstone Integrator.</p>"},{"location":"peripherals/rs_bridge/","title":"RS Bridge","text":"<p>Picture</p> <p></p> <p>The RS Bridge is able to interact with Refined Storage. You can retrieve items, craft items, get all items as a list and more.</p> <p>Requirement</p> <p>Requires the Refined Storage mod to be installed</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in rsBridge Refined Storage No 0.3.6b <p></p> <p>Tip</p> <p>You can use the command <code>/advancedperipherals getHashItem</code> with an item in your hand to get the MD5 hash of the NBT tags of the item. An MD5 Hash can look like this <code>ae70053c97f877de546b0248b9ddf525</code>.</p>"},{"location":"peripherals/rs_bridge/#functions","title":"Functions","text":""},{"location":"peripherals/rs_bridge/#craftitem","title":"craftItem","text":"<pre><code>craftItem(item: table) -&gt; boolean\n</code></pre> <p>Tries to craft the provided <code>item</code>, returns true if it successfully starts crafting.</p>"},{"location":"peripherals/rs_bridge/#item-properties","title":"Item Properties","text":"item Description name: <code>string</code> The registry name of the item count: <code>number?</code> The amount of the item to craft nbt: <code>string?</code> NBT to match the item on json: <code>string?</code> The same as <code>nbt</code> but as a json string tag: <code>string?</code> The item tag(s) to match on <p>OR </p> item Description fingerprint: <code>string</code> A unique fingerprint which identifies theitem to craft count: <code>number?</code> The amount of the item to craft"},{"location":"peripherals/rs_bridge/#craftfluid","title":"craftFluid","text":"<pre><code>craftFluid(fluid: string, amount: number) -&gt; boolean\n</code></pre> <p>Tries to craft the provided <code>fluid</code> of the given <code>amount</code>, returns true if it successfully starts crafting.</p>"},{"location":"peripherals/rs_bridge/#getitem","title":"getItem","text":"<pre><code>getItem(item: table) -&gt; table\n</code></pre> <p>Returns a table with information about the item type in the system.</p>"},{"location":"peripherals/rs_bridge/#properties","title":"Properties","text":"result Description name: <code>string</code> The registry name of the item fingerprint: <code>string?</code> A unique fingerprint which identifies the item to craft amount: <code>number</code> The amount of the item in the system displayName: <code>string</code> The display name for the item isCraftable: <code>boolean</code> Whether the item has a crafting pattern or not nbt: <code>string?</code> NBT to match the item on tags: <code>table</code> A list of all of the item tags"},{"location":"peripherals/rs_bridge/#importitem","title":"importItem","text":"<pre><code>importItem(item: table, direction: string) -&gt; number\n</code></pre> <p>Imports an <code>item</code> from a container in the <code>direction</code> to the ME System. Returns the number of the <code>item</code> imported into the system.</p> <p>Since version 0.7r</p> <p>You can now use both relative (<code>right</code>, <code>left</code>, <code>front</code>, <code>back</code>, <code>top</code>, <code>bottom</code>) and cardinal (<code>north</code>, <code>south</code>, <code>east</code>, <code>west</code>, <code>up</code>, <code>down</code>) directions for the <code>direction</code> argument.  </p> <pre><code>local bridge = peripheral.find(\"rsBridge\")\n\n-- Imports 32 dirt from the container above into the system\nbridge.importItem({name=\"minecraft:dirt\", count=1}, \"up\")\n</code></pre>"},{"location":"peripherals/rs_bridge/#exportitem","title":"exportItem","text":"<pre><code>exportItem(item: table, direction: string) -&gt; number\n</code></pre> <p>Exports an <code>item</code> to a container in the <code>direction</code> from the ME bridge block. Returns the number of the <code>item</code> exported into the container.</p> <pre><code>local bridge = peripheral.find(\"rsBridge\")\n\n-- Exports 1 \"Protection I\" book into the container above\nbridge.exportItem({name=\"minecraft:enchanted_book\", count=1, nbt=\"ae70053c97f877de546b0248b9ddf525\"}, \"up\")\n</code></pre>"},{"location":"peripherals/rs_bridge/#importitemfromperipheral","title":"importItemFromPeripheral","text":"<pre><code>importItemFromPeripheral(item: table, container: string) -&gt; number\n</code></pre> <p>Similar to <code>importItem()</code> it imports an <code>item</code> from a container which is connected to the peripheral network. <code>container</code> should be the exact name of the container peripheral on the network. Returns the number of the <code>item</code> imported from the container.</p>"},{"location":"peripherals/rs_bridge/#exportitemtoperipheral","title":"exportItemToPeripheral","text":"<pre><code>exportItemToPeripheral(item: table, container: string) -&gt; number\n</code></pre> <p>Similar to <code>exportItem()</code> it exports an <code>item</code> to a container which is connected to the peripheral network. <code>container</code> should be the exact name of the container peripheral on the network. Returns the number of the <code>item</code> exported into the container.</p>"},{"location":"peripherals/rs_bridge/#getmaxitemdiskstorage","title":"getMaxItemDiskStorage","text":"<pre><code>getMaxItemDiskStorage() -&gt; number\n</code></pre> <p>Added in version 0.7.3r</p> <p>Returns the total amount of available item disk storage.</p>"},{"location":"peripherals/rs_bridge/#getmaxfluiddiskstorage","title":"getMaxFluidDiskStorage","text":"<pre><code>getMaxItemDiskStorage() -&gt; number\n</code></pre> <p>Added in version 0.7.3r</p> <p>Returns the total amount of available fluid disk storage.</p>"},{"location":"peripherals/rs_bridge/#getmaxitemexternalstorage","title":"getMaxItemExternalStorage","text":"<pre><code>getMaxItemExternalStorage() -&gt; number\n</code></pre> <p>Added in version 0.7.3r</p> <p>Returns the total amount of available external item disk storage.</p>"},{"location":"peripherals/rs_bridge/#getmaxfluidexternalstorage","title":"getMaxFluidExternalStorage","text":"<pre><code>getMaxFluidExternalStorage() -&gt; number\n</code></pre> <p>Added in version 0.7.3r</p> <p>Returns the total amount of available external fluid disk storage.</p>"},{"location":"peripherals/rs_bridge/#getenergystorage","title":"getEnergyStorage","text":"<pre><code>getEnergyStorage() -&gt; number\n</code></pre> <p>Returns the stored energy of the whole RS System in FE.</p>"},{"location":"peripherals/rs_bridge/#getmaxenergystorage","title":"getMaxEnergyStorage","text":"<pre><code>getMaxEnergyStorage() -&gt; number\n</code></pre> <p>Returns the maximum energy storage capacity of the whole RS system in FE.</p>"},{"location":"peripherals/rs_bridge/#getenergyusage","title":"getEnergyUsage","text":"<pre><code>getEnergyUsage() -&gt; number\n</code></pre> <p>Returns the energy usage of the whole RS System in FE/t.</p>"},{"location":"peripherals/rs_bridge/#getpattern","title":"getPattern","text":"<pre><code>getPattern(item: table) -&gt; table | nil, string\n</code></pre> <p>Added in version 0.7.3r</p> <p>Returns the crafting pattern for the <code>item</code> if one exists.</p>"},{"location":"peripherals/rs_bridge/#properties_1","title":"Properties","text":"pattern Description inputs: <code>table</code> A list of all the input items outputs: <code>table</code> A list of all of the output items byproducts: <code>table</code> A list of any byproduct items processing: <code>boolean</code> If the pattern is currently being used in crafting"},{"location":"peripherals/rs_bridge/#isitemcrafting","title":"isItemCrafting","text":"<pre><code>isItemCrafting(item: table) -&gt; boolean\n</code></pre> <p>Returns true if a crafting job for the <code>item</code> exists.</p>"},{"location":"peripherals/rs_bridge/#isitemcraftable","title":"isItemCraftable","text":"<pre><code>isItemCraftable(item: table) -&gt; boolean\n</code></pre> <p>Added in version 0.7.3r</p> <p>Returns true if the <code>item</code> is craftable.</p>"},{"location":"peripherals/rs_bridge/#listcraftableitems","title":"listCraftableItems","text":"<pre><code>listCraftableItems() -&gt; table\n</code></pre> <p>Does not exist in versions &gt;=0.7.3r, &lt;0.7.10b</p> <p>Returns a list of information about all craftable items</p>"},{"location":"peripherals/rs_bridge/#properties_2","title":"Properties","text":"item / fluid Description name: <code>string</code> The registry name of the item fingerprint: <code>string?</code> A unique fingerprint which identifies the item to craft amount: <code>number</code> The amount of the item in the system displayName: <code>string</code> The display name for the item isCraftable: <code>boolean</code> Whether the item has a crafting pattern or not nbt: <code>string?</code> NBT to match the item on tags: <code>table</code> A list of all of the item tags <pre><code>local bridge = peripheral.find(\"rsBridge\")\n\n-- print out all craftable items\ncraftableItems = bridge.listCraftableItems()\nfor _, item in pairs(craftableItems) do\n    print(item.name)\nend\n</code></pre>"},{"location":"peripherals/rs_bridge/#listcraftablefluids","title":"listCraftableFluids","text":"<pre><code>listCraftableFluids() -&gt; table\n</code></pre> <p>Does not exist in versions &gt;=0.7.3r, &lt;0.7.10b</p> <p>Returns a list of information about all craftable fluids</p>"},{"location":"peripherals/rs_bridge/#listitems","title":"listItems","text":"<pre><code>listItems() -&gt; table\n</code></pre> <p>Returns a list of information about all items in the ME System.</p>"},{"location":"peripherals/rs_bridge/#listfluids","title":"listFluids","text":"<pre><code>listFluids() -&gt; table\n</code></pre> <p>Returns a list of information about all fluids in the ME System.</p>"},{"location":"peripherals/rs_bridge/#examples","title":"Examples","text":""},{"location":"peripherals/rs_bridge/#autocrafting-script","title":"Autocrafting script","text":"<p>Here is a script to craft items, the computer will re-craft every item needed (a specified amount) in the RS system. Everything is adjustable.</p> <p>Click here to view the script</p> <p>Bug</p> <p>This script does not work on versions above 0.4b</p>"},{"location":"peripherals/rs_bridge/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7.10b Ported RS Bridge to 1.18.1. Added <code>listCraftableItems</code> and <code>listCraftableFluids</code> back.</p> <p>0.7.3r Added <code>getMaxItemDiskStorage</code>, <code>getMaxFluidDiskStorage</code>, <code>getMaxItemExternalStorage</code>, <code>getMaxFluidExternalStorage</code>, <code>getPattern</code> and <code>isItemCraftable</code>. Removed <code>listCraftableItems</code> and <code>listCraftableFluids</code>.</p> <p>0.7r The RS Bridge does uses computercraft relative and cardinal directions. We also changed some function names.</p> <p>0.4b Reworked the system of the RS Bridge, it has now more features and a new system for the <code>item</code> parameter.</p> <p>0.3.9b Added the <code>importItem</code> and <code>exportItem</code> from container functions.</p> <p>0.3.6b Added the RS Bridge with a good amount of features.</p>"},{"location":"turtles/chatty_turtle/","title":"Chatty Turtle","text":"<p>Picture</p> <p></p> <p>The Chatty Turtle is the turtle version of the Chat Box peripheral. See its documenation for more information.</p> <p></p>"},{"location":"turtles/chatty_turtle/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.4b Added the Chatty Turtle</p>"},{"location":"turtles/chunky_turtle/","title":"Chunky Turtle","text":"<p>Picture</p> <p></p> <p>The Chunky Turtle actively loads the current turtle's chunk. This turtle can be disabled in the mod's configuration file. This turtle has no functions or events.</p> <p></p>"},{"location":"turtles/chunky_turtle/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.4b Added the Chunky Turtle</p>"},{"location":"turtles/environment_turtle/","title":"Environment Turtle","text":"<p>Picture</p> <p></p> <p>The Environment Turtle is the turtle version of the Environment Detector peripheral. See its documenation for more information.</p> <p></p>"},{"location":"turtles/environment_turtle/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.4b Added the Environment Turtle</p>"},{"location":"turtles/geo_scanner_turtle/","title":"Geoscanning Turtle","text":"<p>Picture</p> <p></p> <p>The Geoscanning Turtle is the turtle version of the Geo Scanner peripheral. See its documenation for more information.</p> <p></p>"},{"location":"turtles/geo_scanner_turtle/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7r Added the Geoscanning Turtle</p>"},{"location":"turtles/player_turtle/","title":"Player Turtle","text":"<p>Picture</p> <p></p> <p>The Player Turtle is the turtle version of the Player Detector peripheral. See its documenation for more information.</p> <p></p>"},{"location":"turtles/player_turtle/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.4b Added the Player Turtle</p>"},{"location":"turtles/metaphysics/end_automata/","title":"End Automata","text":"<p>Picture</p> <p></p> <p>End automata is a turtle with an End Mechanic Soul upgrade. This upgrade has all of the abilities of a Weak Automata plus its own additional abilites: \u2022 Teleport between saved locations \u2022 Save a location as a warp point</p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in endAutomata World No 0.7r <p></p>"},{"location":"turtles/metaphysics/end_automata/#functions","title":"Functions","text":""},{"location":"turtles/metaphysics/end_automata/#points","title":"points","text":"<p><pre><code>points() -&gt; table | nil, string\n</code></pre> Returns a list of all saved points and their names</p>"},{"location":"turtles/metaphysics/end_automata/#savepoint","title":"savePoint","text":"<p><pre><code>savePoint(name: string) -&gt; true | nil, string\n</code></pre> This saves the turtle's current location as a warp point with the given <code>name</code> which can be teleported to at a future point in time. Returns true if the location is successfully saved, or nil and an error message.</p>"},{"location":"turtles/metaphysics/end_automata/#distancetopoint","title":"distanceToPoint","text":"<p><pre><code>distanceToPoint(name: string) -&gt; number | nil, string\n</code></pre> Returns the distance from the turtle's current location to the location of the point using the Manhattan distance formula. If the operation fails or the point does not exist then nil and an error message will be returned.</p>"},{"location":"turtles/metaphysics/end_automata/#getwarpcooldown","title":"getWarpCooldown","text":"<p><pre><code>getWarpCooldown() -&gt; number\n</code></pre> Returns the current cooldown for warp operations.</p>"},{"location":"turtles/metaphysics/end_automata/#estimatewarpcost","title":"estimateWarpCost","text":"<p><pre><code>estimateWarpCost(name: string) -&gt; number | nil, string\n</code></pre> Returns the fuel point cost to warp from the current location to the point with the given <code>name</code>. Or nil and an error message.</p>"},{"location":"turtles/metaphysics/end_automata/#warptopoint","title":"warpToPoint","text":"<p><pre><code>warpToPoint(name: string) -&gt; true | nil, string\n</code></pre> Teleports the turtle from the current location to the location of the point with the given <code>name</code>. Returns true if the turtle is successfully teleported or nil and an error message.</p>"},{"location":"turtles/metaphysics/end_automata/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7r Added the End Automata</p>"},{"location":"turtles/metaphysics/husbandry_automata/","title":"Husbandry Automata","text":"<p>Picture</p> <p></p> <p>Husbandry automata is a turtle with a Husbandry Mechanic Soul upgrade. This upgrade has all of the abilities of a Weak Automata plus some additional abilites: \u2022 Use items on animals \u2022 Get information about an animal \u2022 Scan for nearby animals \u2022 Capture and release animals  </p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in husbandryAutomata World No 0.7r <p></p>"},{"location":"turtles/metaphysics/husbandry_automata/#functions","title":"Functions","text":""},{"location":"turtles/metaphysics/husbandry_automata/#useonanimal","title":"useOnAnimal","text":"<p><pre><code>useOnAnimal() -&gt; (true | nil), string\n</code></pre> Tries to use the currently selected item on the animal in front of the turtle. Returns true and the interaction result as a string or if it fails it returns nil and an error message.</p>"},{"location":"turtles/metaphysics/husbandry_automata/#inspectanimal","title":"inspectAnimal","text":"<p><pre><code>inspectAnimal() -&gt; table | nil, string\n</code></pre> Returns information about the animal that is in front of the turtle or nil and an error message.</p>"},{"location":"turtles/metaphysics/husbandry_automata/#searchanimals","title":"searchAnimals","text":"<p><pre><code>searchAnimals() -&gt; table | nil, string\n</code></pre> Returns a list of the animals around the turtle or nil and an error message.</p>"},{"location":"turtles/metaphysics/husbandry_automata/#captureanimal","title":"captureAnimal","text":"<p><pre><code>captureAnimal() -&gt; true | nil, string\n</code></pre> If an animal is in front of the turtle that animal will be captured and stored in the turtle. Returns true if an animal is captured or nil and an error message.</p>"},{"location":"turtles/metaphysics/husbandry_automata/#releaseanimal","title":"releaseAnimal","text":"<p><pre><code>releaseAnimal() -&gt; true | nil, string\n</code></pre> Returns true if it releases the stored animal or nil and an error message.</p>"},{"location":"turtles/metaphysics/husbandry_automata/#getcapturedanimal","title":"getCapturedAnimal","text":"<p><pre><code>getCapturedAnimal() -&gt; table | nil, string\n</code></pre> Returns a table of information about the stored animal or nil and an error message.</p>"},{"location":"turtles/metaphysics/husbandry_automata/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7r Added the Husbandry Automata</p>"},{"location":"turtles/metaphysics/overpowered_automata/","title":"Overpowered Automata","text":"<p>Picture</p> <p></p> <p>Overpowered automata is a turtle with an Overpowered Mechanic Soul upgrade. This upgrade has all of the abilities of the original automata.  </p> <p>This automata will not use any item durability, however there is a very small chance that with every automata operation that the Mechanic Soul upgrade will just break- Forever. Once the upgrade has broken it can not be used again.</p> <p></p> Peripheral Name Interfaces with Has events Introduced in overpoweredWeakAutomataoverpoweredHusbandryAutomataoverpoweredEndAutomata World No 0.7r"},{"location":"turtles/metaphysics/overpowered_automata/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7r Added the Overpowered Automata</p>"},{"location":"turtles/metaphysics/weak_automata/","title":"Weak Automata","text":"<p>Picture</p> <p></p> <p>Weak automata is a turtle with a Weak Mechanic Soul upgrade. It has several different abilities: \u2022 Digging blocks with tools \u2022 Interact with blocks with an item or empty hand \u2022 Collect all or specific nearby items \u2022 Detect nearby items \u2022 Detect blocks and entities in front of the turtle \u2022 Charge the turtle with an energy cell in the turtle's inventory  </p> <p></p> <p> Peripheral Name Interfaces with Has events Introduced in weakAutomata World No 0.7r <p></p>"},{"location":"turtles/metaphysics/weak_automata/#functions","title":"Functions","text":""},{"location":"turtles/metaphysics/weak_automata/#getfuellevel","title":"getFuelLevel","text":"<p><pre><code>getFuelLevel() -&gt; number\n</code></pre> Returns the number of fuel points stored in the turtle.</p>"},{"location":"turtles/metaphysics/weak_automata/#getfuelmaxlevel","title":"getFuelMaxLevel","text":"<p><pre><code>getFuelMaxLevel() -&gt; number\n</code></pre> Returns the maximum amount of fuel points that the turtle can store.</p>"},{"location":"turtles/metaphysics/weak_automata/#getfuelconsumptionrate","title":"getFuelConsumptionRate","text":"<p><pre><code>getFuelConsumptionRate() -&gt; number\n</code></pre> Returns the turtle's current fuel consumption rate.</p>"},{"location":"turtles/metaphysics/weak_automata/#setfuelconsumptionrate","title":"setFuelConsumptionRate","text":"<p><pre><code>setFuelConsumptionRate(rate: number) -&gt; true | nil, string\n</code></pre> Allows you to control the fuel consumption <code>rate</code> of the turtle. See Cooldowns and Fuel consumption to learn about how fuel consumption affects fuel cost and operation cooldowns.</p> <p>Returns true if the consumption rate was successfully set, or nil and an error message.</p>"},{"location":"turtles/metaphysics/weak_automata/#getdigcooldown","title":"getDigCooldown","text":"<p><pre><code>getDigCooldown() -&gt; number\n</code></pre> Returns the current cooldown for dig operations.</p>"},{"location":"turtles/metaphysics/weak_automata/#getsuckcooldown","title":"getSuckCooldown","text":"<p><pre><code>getSuckCooldown() -&gt; number\n</code></pre> Returns the current cooldown for item collection operations.</p>"},{"location":"turtles/metaphysics/weak_automata/#getuseonblockcooldown","title":"getUseOnBlockCooldown","text":"<p><pre><code>getUseOnBlockCooldown() -&gt; number\n</code></pre> Returns the current cooldown for block interaction operations.</p>"},{"location":"turtles/metaphysics/weak_automata/#getconfiguration","title":"getConfiguration","text":"<p><pre><code>getConfiguration() -&gt; table\n</code></pre> Returns the configuration values for this automata.</p>"},{"location":"turtles/metaphysics/weak_automata/#lookatblock","title":"lookAtBlock","text":"<p><pre><code>lookAtBlock() -&gt; table | nil, string\n</code></pre> Returns a table containing information about the block infront of the turtle or if the operation fails it will return nil and an error message.</p>"},{"location":"turtles/metaphysics/weak_automata/#lookatentity","title":"lookAtEntity","text":"<p><pre><code>lookAtEntity() -&gt; table | nil, string\n</code></pre> Returns a table containing information about the entity infront of the turtle or if the operation fails it will return nil and an error message.</p>"},{"location":"turtles/metaphysics/weak_automata/#digblock","title":"digBlock","text":"<p><pre><code>digBlock() -&gt; true | nil, string\n</code></pre> Tries to dig the block that the turtle is looking at with the current item. It returns true if it successfully mines the block or nil and an error message.</p>"},{"location":"turtles/metaphysics/weak_automata/#useonblock","title":"useOnBlock","text":"<p><pre><code>useOnBlock() -&gt; true | nil, string\n</code></pre> Tries to interact with the block that the turtle is looking at with the current item. It returns true if it successfully interacts with the block or nil and an error message.</p>"},{"location":"turtles/metaphysics/weak_automata/#scanitems","title":"scanItems","text":"<p><pre><code>scanItems() -&gt; table | nil, string\n</code></pre> Returns a list of items that are around the turtle or nil and an error message if it fails.</p>"},{"location":"turtles/metaphysics/weak_automata/#collectitems","title":"collectItems","text":"<p><pre><code>collectItems([count: number]) -&gt; true | nil, string\n</code></pre> Tries to collect all items or a specific amount if <code>count</code> is given around the turtle. Returns true if it successfully collects items or nil and an error message.</p>"},{"location":"turtles/metaphysics/weak_automata/#collectspecificitem","title":"collectSpecificItem","text":"<p><pre><code>collectSpecificItem(item: string[, count: number]) -&gt; true | nil, string\n</code></pre> Tries to collect all items or a specific amount if <code>count</code> is given of the given <code>item</code> type that are around the turtle. Returns true if it successfully collects items or nil and an error message.</p>"},{"location":"turtles/metaphysics/weak_automata/#feedsoul","title":"feedSoul","text":"<p><pre><code>feedSoul() -&gt; (true | nil), string\n</code></pre> Tries to feed the entity that is in front of the turtle to the mechanic soul upgrade in the the turtle's selected slot. Returns true and the interaction result as a string or if it fails nil and an error message.</p>"},{"location":"turtles/metaphysics/weak_automata/#chargeturtle","title":"chargeTurtle","text":"<p><pre><code>chargeTurtle([fuel: number]) -&gt; number | nil, string\n</code></pre> Tries to fuel the turtle using an energy cell in the turtle's inventory. The <code>fuel</code> argument limits the amount of fuel it will try to gain. Returns the amount of fuel points gained or nil and an error message.</p>"},{"location":"turtles/metaphysics/weak_automata/#changelogtrivia","title":"Changelog/Trivia","text":"<p>0.7r Added the Weak Automata</p>"}]}